// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bcdown.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "bcdown.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace bcdown {

namespace {

const ::google::protobuf::Descriptor* battlecheck_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  battlecheck_reflection_ = NULL;
const ::google::protobuf::Descriptor* pve_check_msg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  pve_check_msg_reflection_ = NULL;
const ::google::protobuf::Descriptor* pvp_check_msg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  pvp_check_msg_reflection_ = NULL;
const ::google::protobuf::Descriptor* tbc_check_msg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  tbc_check_msg_reflection_ = NULL;
const ::google::protobuf::Descriptor* excav_check_msg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  excav_check_msg_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* excav_check_msg_oppo_type_descriptor_ = NULL;
const ::google::protobuf::Descriptor* hero_equip_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  hero_equip_reflection_ = NULL;
const ::google::protobuf::Descriptor* hero_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  hero_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* hero_status_descriptor_ = NULL;
const ::google::protobuf::Descriptor* hero_dyna_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  hero_dyna_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* result_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_bcdown_2eproto() {
  protobuf_AddDesc_bcdown_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "bcdown.proto");
  GOOGLE_CHECK(file != NULL);
  battlecheck_descriptor_ = file->message_type(0);
  static const int battlecheck_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(battlecheck, _pve_msg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(battlecheck, _pvp_msg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(battlecheck, _tbc_msg_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(battlecheck, _excav_msg_),
  };
  battlecheck_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      battlecheck_descriptor_,
      battlecheck::default_instance_,
      battlecheck_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(battlecheck, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(battlecheck, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(battlecheck));
  pve_check_msg_descriptor_ = file->message_type(1);
  static const int pve_check_msg_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pve_check_msg, _checkid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pve_check_msg, _userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pve_check_msg, _stageid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pve_check_msg, _result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pve_check_msg, _stars_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pve_check_msg, _heroes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pve_check_msg, _oprations_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pve_check_msg, _rseed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pve_check_msg, _cli_battle_time_),
  };
  pve_check_msg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      pve_check_msg_descriptor_,
      pve_check_msg::default_instance_,
      pve_check_msg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pve_check_msg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pve_check_msg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(pve_check_msg));
  pvp_check_msg_descriptor_ = file->message_type(2);
  static const int pvp_check_msg_offsets_[15] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pvp_check_msg, _checkid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pvp_check_msg, _userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pvp_check_msg, _username_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pvp_check_msg, _level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pvp_check_msg, _avatar_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pvp_check_msg, _oppo_userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pvp_check_msg, _oppo_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pvp_check_msg, _oppo_level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pvp_check_msg, _oppo_avatar_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pvp_check_msg, _oppo_robot_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pvp_check_msg, _result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pvp_check_msg, _self_heroes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pvp_check_msg, _oppo_heroes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pvp_check_msg, _rseed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pvp_check_msg, _self_robot_),
  };
  pvp_check_msg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      pvp_check_msg_descriptor_,
      pvp_check_msg::default_instance_,
      pvp_check_msg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pvp_check_msg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(pvp_check_msg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(pvp_check_msg));
  tbc_check_msg_descriptor_ = file->message_type(3);
  static const int tbc_check_msg_offsets_[17] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tbc_check_msg, _checkid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tbc_check_msg, _userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tbc_check_msg, _username_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tbc_check_msg, _oppo_userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tbc_check_msg, _oppo_name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tbc_check_msg, _oppo_robot_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tbc_check_msg, _result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tbc_check_msg, _self_heroes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tbc_check_msg, _oppo_heroes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tbc_check_msg, _rseed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tbc_check_msg, _self_robot_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tbc_check_msg, _self_dyna_start_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tbc_check_msg, _self_dyna_end_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tbc_check_msg, _oppo_dyna_start_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tbc_check_msg, _oppo_dyna_end_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tbc_check_msg, _oprations_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tbc_check_msg, _cli_battle_time_),
  };
  tbc_check_msg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      tbc_check_msg_descriptor_,
      tbc_check_msg::default_instance_,
      tbc_check_msg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tbc_check_msg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(tbc_check_msg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(tbc_check_msg));
  excav_check_msg_descriptor_ = file->message_type(4);
  static const int excav_check_msg_offsets_[14] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(excav_check_msg, _checkid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(excav_check_msg, _userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(excav_check_msg, _oppo_userid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(excav_check_msg, _oppo_type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(excav_check_msg, _result_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(excav_check_msg, _self_heroes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(excav_check_msg, _oppo_heroes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(excav_check_msg, _rseed_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(excav_check_msg, _self_dyna_start_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(excav_check_msg, _self_dyna_end_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(excav_check_msg, _oppo_dyna_start_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(excav_check_msg, _oppo_dyna_end_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(excav_check_msg, _oprations_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(excav_check_msg, _cli_battle_time_),
  };
  excav_check_msg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      excav_check_msg_descriptor_,
      excav_check_msg::default_instance_,
      excav_check_msg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(excav_check_msg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(excav_check_msg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(excav_check_msg));
  excav_check_msg_oppo_type_descriptor_ = excav_check_msg_descriptor_->enum_type(0);
  hero_equip_descriptor_ = file->message_type(5);
  static const int hero_equip_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hero_equip, _index_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hero_equip, _item_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hero_equip, _exp_),
  };
  hero_equip_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      hero_equip_descriptor_,
      hero_equip::default_instance_,
      hero_equip_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hero_equip, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hero_equip, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(hero_equip));
  hero_descriptor_ = file->message_type(6);
  static const int hero_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hero, _tid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hero, _rank_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hero, _level_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hero, _stars_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hero, _exp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hero, _gs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hero, _state_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hero, _skill_levels_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hero, _items_),
  };
  hero_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      hero_descriptor_,
      hero::default_instance_,
      hero_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hero, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hero, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(hero));
  hero_status_descriptor_ = hero_descriptor_->enum_type(0);
  hero_dyna_descriptor_ = file->message_type(7);
  static const int hero_dyna_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hero_dyna, _hp_perc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hero_dyna, _mp_perc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hero_dyna, _custom_data_),
  };
  hero_dyna_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      hero_dyna_descriptor_,
      hero_dyna::default_instance_,
      hero_dyna_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hero_dyna, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(hero_dyna, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(hero_dyna));
  result_descriptor_ = file->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_bcdown_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    battlecheck_descriptor_, &battlecheck::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    pve_check_msg_descriptor_, &pve_check_msg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    pvp_check_msg_descriptor_, &pvp_check_msg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    tbc_check_msg_descriptor_, &tbc_check_msg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    excav_check_msg_descriptor_, &excav_check_msg::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    hero_equip_descriptor_, &hero_equip::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    hero_descriptor_, &hero::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    hero_dyna_descriptor_, &hero_dyna::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_bcdown_2eproto() {
  delete battlecheck::default_instance_;
  delete battlecheck_reflection_;
  delete pve_check_msg::default_instance_;
  delete pve_check_msg_reflection_;
  delete pvp_check_msg::default_instance_;
  delete pvp_check_msg_reflection_;
  delete tbc_check_msg::default_instance_;
  delete tbc_check_msg_reflection_;
  delete excav_check_msg::default_instance_;
  delete excav_check_msg_reflection_;
  delete hero_equip::default_instance_;
  delete hero_equip_reflection_;
  delete hero::default_instance_;
  delete hero_reflection_;
  delete hero_dyna::default_instance_;
  delete hero_dyna_reflection_;
}

void protobuf_AddDesc_bcdown_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014bcdown.proto\022\006bcdown\"\265\001\n\013battlecheck\022\'"
    "\n\010_pve_msg\030\001 \003(\0132\025.bcdown.pve_check_msg\022"
    "\'\n\010_pvp_msg\030\002 \003(\0132\025.bcdown.pvp_check_msg"
    "\022\'\n\010_tbc_msg\030\003 \003(\0132\025.bcdown.tbc_check_ms"
    "g\022+\n\n_excav_msg\030\004 \003(\0132\027.bcdown.excav_che"
    "ck_msg\"\333\001\n\rpve_check_msg\022\020\n\010_checkid\030\001 \002"
    "(\r\022\017\n\007_userid\030\002 \002(\r\022\020\n\010_stageid\030\003 \002(\r\022(\n"
    "\007_result\030\004 \002(\0162\016.bcdown.result:\007victory\022"
    "\016\n\006_stars\030\005 \002(\r\022\035\n\007_heroes\030\006 \003(\0132\014.bcdow"
    "n.hero\022\022\n\n_oprations\030\007 \003(\r\022\016\n\006_rseed\030\010 \002"
    "(\r\022\030\n\020_cli_battle_time\030\t \001(\r\"\347\002\n\rpvp_che"
    "ck_msg\022\020\n\010_checkid\030\001 \002(\r\022\017\n\007_userid\030\002 \002("
    "\r\022\021\n\t_username\030\003 \001(\t\022\016\n\006_level\030\004 \001(\r\022\017\n\007"
    "_avatar\030\005 \001(\r\022\024\n\014_oppo_userid\030\006 \002(\r\022\022\n\n_"
    "oppo_name\030\007 \001(\t\022\023\n\013_oppo_level\030\010 \001(\r\022\024\n\014"
    "_oppo_avatar\030\t \001(\r\022\023\n\013_oppo_robot\030\n \001(\r\022"
    "(\n\007_result\030\013 \001(\0162\016.bcdown.result:\007victor"
    "y\022\"\n\014_self_heroes\030\014 \003(\0132\014.bcdown.hero\022\"\n"
    "\014_oppo_heroes\030\r \003(\0132\014.bcdown.hero\022\016\n\006_rs"
    "eed\030\016 \002(\r\022\023\n\013_self_robot\030\017 \001(\r\"\371\003\n\rtbc_c"
    "heck_msg\022\020\n\010_checkid\030\001 \002(\r\022\017\n\007_userid\030\002 "
    "\002(\r\022\021\n\t_username\030\003 \001(\t\022\024\n\014_oppo_userid\030\004"
    " \002(\r\022\022\n\n_oppo_name\030\005 \001(\t\022\023\n\013_oppo_robot\030"
    "\006 \001(\r\022(\n\007_result\030\007 \001(\0162\016.bcdown.result:\007"
    "victory\022\"\n\014_self_heroes\030\010 \003(\0132\014.bcdown.h"
    "ero\022\"\n\014_oppo_heroes\030\t \003(\0132\014.bcdown.hero\022"
    "\016\n\006_rseed\030\n \002(\r\022\023\n\013_self_robot\030\013 \001(\r\022+\n\020"
    "_self_dyna_start\030\014 \003(\0132\021.bcdown.hero_dyn"
    "a\022)\n\016_self_dyna_end\030\r \003(\0132\021.bcdown.hero_"
    "dyna\022+\n\020_oppo_dyna_start\030\016 \003(\0132\021.bcdown."
    "hero_dyna\022)\n\016_oppo_dyna_end\030\017 \003(\0132\021.bcdo"
    "wn.hero_dyna\022\022\n\n_oprations\030\020 \003(\r\022\030\n\020_cli"
    "_battle_time\030\021 \001(\r\"\207\004\n\017excav_check_msg\022\020"
    "\n\010_checkid\030\001 \002(\r\022\017\n\007_userid\030\002 \002(\r\022\024\n\014_op"
    "po_userid\030\003 \002(\r\0225\n\n_oppo_type\030\004 \001(\0162!.bc"
    "down.excav_check_msg.oppo_type\022(\n\007_resul"
    "t\030\005 \001(\0162\016.bcdown.result:\007victory\022\"\n\014_sel"
    "f_heroes\030\006 \003(\0132\014.bcdown.hero\022\"\n\014_oppo_he"
    "roes\030\007 \003(\0132\014.bcdown.hero\022\016\n\006_rseed\030\010 \002(\r"
    "\022+\n\020_self_dyna_start\030\t \003(\0132\021.bcdown.hero"
    "_dyna\022)\n\016_self_dyna_end\030\n \003(\0132\021.bcdown.h"
    "ero_dyna\022+\n\020_oppo_dyna_start\030\013 \003(\0132\021.bcd"
    "own.hero_dyna\022)\n\016_oppo_dyna_end\030\014 \003(\0132\021."
    "bcdown.hero_dyna\022\022\n\n_oprations\030\r \003(\r\022\030\n\020"
    "_cli_battle_time\030\016 \001(\r\"$\n\toppo_type\022\013\n\007m"
    "onster\020\001\022\n\n\006player\020\002\"<\n\nhero_equip\022\016\n\006_i"
    "ndex\030\001 \002(\r\022\020\n\010_item_id\030\002 \002(\r\022\014\n\004_exp\030\003 \002"
    "(\r\"\350\001\n\004hero\022\014\n\004_tid\030\001 \002(\r\022\r\n\005_rank\030\002 \001(\r"
    "\022\016\n\006_level\030\003 \002(\r\022\016\n\006_stars\030\004 \002(\r\022\014\n\004_exp"
    "\030\005 \002(\r\022\013\n\003_gs\030\006 \002(\r\022#\n\006_state\030\007 \002(\0162\023.bc"
    "down.hero.status\022\025\n\r_skill_levels\030\010 \003(\r\022"
    "\"\n\006_items\030\t \003(\0132\022.bcdown.hero_equip\"(\n\006s"
    "tatus\022\010\n\004idle\020\000\022\010\n\004hire\020\001\022\n\n\006mining\020\002\"E\n"
    "\thero_dyna\022\020\n\010_hp_perc\030\001 \002(\r\022\020\n\010_mp_perc"
    "\030\002 \002(\r\022\024\n\014_custom_data\030\003 \001(\r*<\n\006result\022\013"
    "\n\007victory\020\000\022\n\n\006defeat\020\001\022\014\n\010canceled\020\002\022\013\n"
    "\007timeout\020\003", 2250);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "bcdown.proto", &protobuf_RegisterTypes);
  battlecheck::default_instance_ = new battlecheck();
  pve_check_msg::default_instance_ = new pve_check_msg();
  pvp_check_msg::default_instance_ = new pvp_check_msg();
  tbc_check_msg::default_instance_ = new tbc_check_msg();
  excav_check_msg::default_instance_ = new excav_check_msg();
  hero_equip::default_instance_ = new hero_equip();
  hero::default_instance_ = new hero();
  hero_dyna::default_instance_ = new hero_dyna();
  battlecheck::default_instance_->InitAsDefaultInstance();
  pve_check_msg::default_instance_->InitAsDefaultInstance();
  pvp_check_msg::default_instance_->InitAsDefaultInstance();
  tbc_check_msg::default_instance_->InitAsDefaultInstance();
  excav_check_msg::default_instance_->InitAsDefaultInstance();
  hero_equip::default_instance_->InitAsDefaultInstance();
  hero::default_instance_->InitAsDefaultInstance();
  hero_dyna::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_bcdown_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_bcdown_2eproto {
  StaticDescriptorInitializer_bcdown_2eproto() {
    protobuf_AddDesc_bcdown_2eproto();
  }
} static_descriptor_initializer_bcdown_2eproto_;
const ::google::protobuf::EnumDescriptor* result_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return result_descriptor_;
}
bool result_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#ifndef _MSC_VER
const int battlecheck::kPveMsgFieldNumber;
const int battlecheck::kPvpMsgFieldNumber;
const int battlecheck::kTbcMsgFieldNumber;
const int battlecheck::kExcavMsgFieldNumber;
#endif  // !_MSC_VER

battlecheck::battlecheck()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void battlecheck::InitAsDefaultInstance() {
}

battlecheck::battlecheck(const battlecheck& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void battlecheck::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

battlecheck::~battlecheck() {
  SharedDtor();
}

void battlecheck::SharedDtor() {
  if (this != default_instance_) {
  }
}

void battlecheck::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* battlecheck::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return battlecheck_descriptor_;
}

const battlecheck& battlecheck::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bcdown_2eproto();
  return *default_instance_;
}

battlecheck* battlecheck::default_instance_ = NULL;

battlecheck* battlecheck::New() const {
  return new battlecheck;
}

void battlecheck::Clear() {
  _pve_msg_.Clear();
  _pvp_msg_.Clear();
  _tbc_msg_.Clear();
  _excav_msg_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool battlecheck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .bcdown.pve_check_msg _pve_msg = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse__pve_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add__pve_msg()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse__pve_msg;
        if (input->ExpectTag(18)) goto parse__pvp_msg;
        break;
      }

      // repeated .bcdown.pvp_check_msg _pvp_msg = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse__pvp_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add__pvp_msg()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse__pvp_msg;
        if (input->ExpectTag(26)) goto parse__tbc_msg;
        break;
      }

      // repeated .bcdown.tbc_check_msg _tbc_msg = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse__tbc_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add__tbc_msg()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse__tbc_msg;
        if (input->ExpectTag(34)) goto parse__excav_msg;
        break;
      }

      // repeated .bcdown.excav_check_msg _excav_msg = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse__excav_msg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add__excav_msg()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse__excav_msg;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void battlecheck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .bcdown.pve_check_msg _pve_msg = 1;
  for (int i = 0; i < this->_pve_msg_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_pve_msg(i), output);
  }

  // repeated .bcdown.pvp_check_msg _pvp_msg = 2;
  for (int i = 0; i < this->_pvp_msg_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_pvp_msg(i), output);
  }

  // repeated .bcdown.tbc_check_msg _tbc_msg = 3;
  for (int i = 0; i < this->_tbc_msg_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_tbc_msg(i), output);
  }

  // repeated .bcdown.excav_check_msg _excav_msg = 4;
  for (int i = 0; i < this->_excav_msg_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_excav_msg(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* battlecheck::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .bcdown.pve_check_msg _pve_msg = 1;
  for (int i = 0; i < this->_pve_msg_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->_pve_msg(i), target);
  }

  // repeated .bcdown.pvp_check_msg _pvp_msg = 2;
  for (int i = 0; i < this->_pvp_msg_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->_pvp_msg(i), target);
  }

  // repeated .bcdown.tbc_check_msg _tbc_msg = 3;
  for (int i = 0; i < this->_tbc_msg_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->_tbc_msg(i), target);
  }

  // repeated .bcdown.excav_check_msg _excav_msg = 4;
  for (int i = 0; i < this->_excav_msg_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->_excav_msg(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int battlecheck::ByteSize() const {
  int total_size = 0;

  // repeated .bcdown.pve_check_msg _pve_msg = 1;
  total_size += 1 * this->_pve_msg_size();
  for (int i = 0; i < this->_pve_msg_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->_pve_msg(i));
  }

  // repeated .bcdown.pvp_check_msg _pvp_msg = 2;
  total_size += 1 * this->_pvp_msg_size();
  for (int i = 0; i < this->_pvp_msg_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->_pvp_msg(i));
  }

  // repeated .bcdown.tbc_check_msg _tbc_msg = 3;
  total_size += 1 * this->_tbc_msg_size();
  for (int i = 0; i < this->_tbc_msg_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->_tbc_msg(i));
  }

  // repeated .bcdown.excav_check_msg _excav_msg = 4;
  total_size += 1 * this->_excav_msg_size();
  for (int i = 0; i < this->_excav_msg_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->_excav_msg(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void battlecheck::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const battlecheck* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const battlecheck*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void battlecheck::MergeFrom(const battlecheck& from) {
  GOOGLE_CHECK_NE(&from, this);
  _pve_msg_.MergeFrom(from._pve_msg_);
  _pvp_msg_.MergeFrom(from._pvp_msg_);
  _tbc_msg_.MergeFrom(from._tbc_msg_);
  _excav_msg_.MergeFrom(from._excav_msg_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void battlecheck::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void battlecheck::CopyFrom(const battlecheck& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool battlecheck::IsInitialized() const {

  for (int i = 0; i < _pve_msg_size(); i++) {
    if (!this->_pve_msg(i).IsInitialized()) return false;
  }
  for (int i = 0; i < _pvp_msg_size(); i++) {
    if (!this->_pvp_msg(i).IsInitialized()) return false;
  }
  for (int i = 0; i < _tbc_msg_size(); i++) {
    if (!this->_tbc_msg(i).IsInitialized()) return false;
  }
  for (int i = 0; i < _excav_msg_size(); i++) {
    if (!this->_excav_msg(i).IsInitialized()) return false;
  }
  return true;
}

void battlecheck::Swap(battlecheck* other) {
  if (other != this) {
    _pve_msg_.Swap(&other->_pve_msg_);
    _pvp_msg_.Swap(&other->_pvp_msg_);
    _tbc_msg_.Swap(&other->_tbc_msg_);
    _excav_msg_.Swap(&other->_excav_msg_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata battlecheck::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = battlecheck_descriptor_;
  metadata.reflection = battlecheck_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int pve_check_msg::kCheckidFieldNumber;
const int pve_check_msg::kUseridFieldNumber;
const int pve_check_msg::kStageidFieldNumber;
const int pve_check_msg::kResultFieldNumber;
const int pve_check_msg::kStarsFieldNumber;
const int pve_check_msg::kHeroesFieldNumber;
const int pve_check_msg::kOprationsFieldNumber;
const int pve_check_msg::kRseedFieldNumber;
const int pve_check_msg::kCliBattleTimeFieldNumber;
#endif  // !_MSC_VER

pve_check_msg::pve_check_msg()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void pve_check_msg::InitAsDefaultInstance() {
}

pve_check_msg::pve_check_msg(const pve_check_msg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void pve_check_msg::SharedCtor() {
  _cached_size_ = 0;
  _checkid_ = 0u;
  _userid_ = 0u;
  _stageid_ = 0u;
  _result_ = 0;
  _stars_ = 0u;
  _rseed_ = 0u;
  _cli_battle_time_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

pve_check_msg::~pve_check_msg() {
  SharedDtor();
}

void pve_check_msg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void pve_check_msg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* pve_check_msg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return pve_check_msg_descriptor_;
}

const pve_check_msg& pve_check_msg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bcdown_2eproto();
  return *default_instance_;
}

pve_check_msg* pve_check_msg::default_instance_ = NULL;

pve_check_msg* pve_check_msg::New() const {
  return new pve_check_msg;
}

void pve_check_msg::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    _checkid_ = 0u;
    _userid_ = 0u;
    _stageid_ = 0u;
    _result_ = 0;
    _stars_ = 0u;
    _rseed_ = 0u;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    _cli_battle_time_ = 0u;
  }
  _heroes_.Clear();
  _oprations_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool pve_check_msg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 _checkid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_checkid_)));
          set_has__checkid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse__userid;
        break;
      }

      // required uint32 _userid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse__userid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_userid_)));
          set_has__userid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse__stageid;
        break;
      }

      // required uint32 _stageid = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse__stageid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_stageid_)));
          set_has__stageid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse__result;
        break;
      }

      // required .bcdown.result _result = 4 [default = victory];
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse__result:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::bcdown::result_IsValid(value)) {
            set__result(static_cast< ::bcdown::result >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse__stars;
        break;
      }

      // required uint32 _stars = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse__stars:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_stars_)));
          set_has__stars();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse__heroes;
        break;
      }

      // repeated .bcdown.hero _heroes = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse__heroes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add__heroes()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse__heroes;
        if (input->ExpectTag(56)) goto parse__oprations;
        break;
      }

      // repeated uint32 _oprations = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse__oprations:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 56, input, this->mutable__oprations())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable__oprations())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse__oprations;
        if (input->ExpectTag(64)) goto parse__rseed;
        break;
      }

      // required uint32 _rseed = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse__rseed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_rseed_)));
          set_has__rseed();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse__cli_battle_time;
        break;
      }

      // optional uint32 _cli_battle_time = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse__cli_battle_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_cli_battle_time_)));
          set_has__cli_battle_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void pve_check_msg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 _checkid = 1;
  if (has__checkid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->_checkid(), output);
  }

  // required uint32 _userid = 2;
  if (has__userid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->_userid(), output);
  }

  // required uint32 _stageid = 3;
  if (has__stageid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->_stageid(), output);
  }

  // required .bcdown.result _result = 4 [default = victory];
  if (has__result()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->_result(), output);
  }

  // required uint32 _stars = 5;
  if (has__stars()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->_stars(), output);
  }

  // repeated .bcdown.hero _heroes = 6;
  for (int i = 0; i < this->_heroes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_heroes(i), output);
  }

  // repeated uint32 _oprations = 7;
  for (int i = 0; i < this->_oprations_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      7, this->_oprations(i), output);
  }

  // required uint32 _rseed = 8;
  if (has__rseed()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->_rseed(), output);
  }

  // optional uint32 _cli_battle_time = 9;
  if (has__cli_battle_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->_cli_battle_time(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* pve_check_msg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 _checkid = 1;
  if (has__checkid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->_checkid(), target);
  }

  // required uint32 _userid = 2;
  if (has__userid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->_userid(), target);
  }

  // required uint32 _stageid = 3;
  if (has__stageid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->_stageid(), target);
  }

  // required .bcdown.result _result = 4 [default = victory];
  if (has__result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->_result(), target);
  }

  // required uint32 _stars = 5;
  if (has__stars()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->_stars(), target);
  }

  // repeated .bcdown.hero _heroes = 6;
  for (int i = 0; i < this->_heroes_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->_heroes(i), target);
  }

  // repeated uint32 _oprations = 7;
  for (int i = 0; i < this->_oprations_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(7, this->_oprations(i), target);
  }

  // required uint32 _rseed = 8;
  if (has__rseed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->_rseed(), target);
  }

  // optional uint32 _cli_battle_time = 9;
  if (has__cli_battle_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->_cli_battle_time(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int pve_check_msg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 _checkid = 1;
    if (has__checkid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_checkid());
    }

    // required uint32 _userid = 2;
    if (has__userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_userid());
    }

    // required uint32 _stageid = 3;
    if (has__stageid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_stageid());
    }

    // required .bcdown.result _result = 4 [default = victory];
    if (has__result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->_result());
    }

    // required uint32 _stars = 5;
    if (has__stars()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_stars());
    }

    // required uint32 _rseed = 8;
    if (has__rseed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_rseed());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional uint32 _cli_battle_time = 9;
    if (has__cli_battle_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_cli_battle_time());
    }

  }
  // repeated .bcdown.hero _heroes = 6;
  total_size += 1 * this->_heroes_size();
  for (int i = 0; i < this->_heroes_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->_heroes(i));
  }

  // repeated uint32 _oprations = 7;
  {
    int data_size = 0;
    for (int i = 0; i < this->_oprations_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->_oprations(i));
    }
    total_size += 1 * this->_oprations_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void pve_check_msg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const pve_check_msg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const pve_check_msg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void pve_check_msg::MergeFrom(const pve_check_msg& from) {
  GOOGLE_CHECK_NE(&from, this);
  _heroes_.MergeFrom(from._heroes_);
  _oprations_.MergeFrom(from._oprations_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has__checkid()) {
      set__checkid(from._checkid());
    }
    if (from.has__userid()) {
      set__userid(from._userid());
    }
    if (from.has__stageid()) {
      set__stageid(from._stageid());
    }
    if (from.has__result()) {
      set__result(from._result());
    }
    if (from.has__stars()) {
      set__stars(from._stars());
    }
    if (from.has__rseed()) {
      set__rseed(from._rseed());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has__cli_battle_time()) {
      set__cli_battle_time(from._cli_battle_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void pve_check_msg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void pve_check_msg::CopyFrom(const pve_check_msg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool pve_check_msg::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000009f) != 0x0000009f) return false;

  for (int i = 0; i < _heroes_size(); i++) {
    if (!this->_heroes(i).IsInitialized()) return false;
  }
  return true;
}

void pve_check_msg::Swap(pve_check_msg* other) {
  if (other != this) {
    std::swap(_checkid_, other->_checkid_);
    std::swap(_userid_, other->_userid_);
    std::swap(_stageid_, other->_stageid_);
    std::swap(_result_, other->_result_);
    std::swap(_stars_, other->_stars_);
    _heroes_.Swap(&other->_heroes_);
    _oprations_.Swap(&other->_oprations_);
    std::swap(_rseed_, other->_rseed_);
    std::swap(_cli_battle_time_, other->_cli_battle_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata pve_check_msg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = pve_check_msg_descriptor_;
  metadata.reflection = pve_check_msg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int pvp_check_msg::kCheckidFieldNumber;
const int pvp_check_msg::kUseridFieldNumber;
const int pvp_check_msg::kUsernameFieldNumber;
const int pvp_check_msg::kLevelFieldNumber;
const int pvp_check_msg::kAvatarFieldNumber;
const int pvp_check_msg::kOppoUseridFieldNumber;
const int pvp_check_msg::kOppoNameFieldNumber;
const int pvp_check_msg::kOppoLevelFieldNumber;
const int pvp_check_msg::kOppoAvatarFieldNumber;
const int pvp_check_msg::kOppoRobotFieldNumber;
const int pvp_check_msg::kResultFieldNumber;
const int pvp_check_msg::kSelfHeroesFieldNumber;
const int pvp_check_msg::kOppoHeroesFieldNumber;
const int pvp_check_msg::kRseedFieldNumber;
const int pvp_check_msg::kSelfRobotFieldNumber;
#endif  // !_MSC_VER

pvp_check_msg::pvp_check_msg()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void pvp_check_msg::InitAsDefaultInstance() {
}

pvp_check_msg::pvp_check_msg(const pvp_check_msg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void pvp_check_msg::SharedCtor() {
  _cached_size_ = 0;
  _checkid_ = 0u;
  _userid_ = 0u;
  _username_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  _level_ = 0u;
  _avatar_ = 0u;
  _oppo_userid_ = 0u;
  _oppo_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  _oppo_level_ = 0u;
  _oppo_avatar_ = 0u;
  _oppo_robot_ = 0u;
  _result_ = 0;
  _rseed_ = 0u;
  _self_robot_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

pvp_check_msg::~pvp_check_msg() {
  SharedDtor();
}

void pvp_check_msg::SharedDtor() {
  if (_username_ != &::google::protobuf::internal::kEmptyString) {
    delete _username_;
  }
  if (_oppo_name_ != &::google::protobuf::internal::kEmptyString) {
    delete _oppo_name_;
  }
  if (this != default_instance_) {
  }
}

void pvp_check_msg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* pvp_check_msg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return pvp_check_msg_descriptor_;
}

const pvp_check_msg& pvp_check_msg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bcdown_2eproto();
  return *default_instance_;
}

pvp_check_msg* pvp_check_msg::default_instance_ = NULL;

pvp_check_msg* pvp_check_msg::New() const {
  return new pvp_check_msg;
}

void pvp_check_msg::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    _checkid_ = 0u;
    _userid_ = 0u;
    if (has__username()) {
      if (_username_ != &::google::protobuf::internal::kEmptyString) {
        _username_->clear();
      }
    }
    _level_ = 0u;
    _avatar_ = 0u;
    _oppo_userid_ = 0u;
    if (has__oppo_name()) {
      if (_oppo_name_ != &::google::protobuf::internal::kEmptyString) {
        _oppo_name_->clear();
      }
    }
    _oppo_level_ = 0u;
  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    _oppo_avatar_ = 0u;
    _oppo_robot_ = 0u;
    _result_ = 0;
    _rseed_ = 0u;
    _self_robot_ = 0u;
  }
  _self_heroes_.Clear();
  _oppo_heroes_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool pvp_check_msg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 _checkid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_checkid_)));
          set_has__checkid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse__userid;
        break;
      }

      // required uint32 _userid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse__userid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_userid_)));
          set_has__userid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse__username;
        break;
      }

      // optional string _username = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse__username:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->_username().data(), this->_username().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse__level;
        break;
      }

      // optional uint32 _level = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse__level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_level_)));
          set_has__level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse__avatar;
        break;
      }

      // optional uint32 _avatar = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse__avatar:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_avatar_)));
          set_has__avatar();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse__oppo_userid;
        break;
      }

      // required uint32 _oppo_userid = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse__oppo_userid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_oppo_userid_)));
          set_has__oppo_userid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse__oppo_name;
        break;
      }

      // optional string _oppo_name = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse__oppo_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__oppo_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->_oppo_name().data(), this->_oppo_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse__oppo_level;
        break;
      }

      // optional uint32 _oppo_level = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse__oppo_level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_oppo_level_)));
          set_has__oppo_level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(72)) goto parse__oppo_avatar;
        break;
      }

      // optional uint32 _oppo_avatar = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse__oppo_avatar:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_oppo_avatar_)));
          set_has__oppo_avatar();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(80)) goto parse__oppo_robot;
        break;
      }

      // optional uint32 _oppo_robot = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse__oppo_robot:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_oppo_robot_)));
          set_has__oppo_robot();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse__result;
        break;
      }

      // optional .bcdown.result _result = 11 [default = victory];
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse__result:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::bcdown::result_IsValid(value)) {
            set__result(static_cast< ::bcdown::result >(value));
          } else {
            mutable_unknown_fields()->AddVarint(11, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse__self_heroes;
        break;
      }

      // repeated .bcdown.hero _self_heroes = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse__self_heroes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add__self_heroes()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse__self_heroes;
        if (input->ExpectTag(106)) goto parse__oppo_heroes;
        break;
      }

      // repeated .bcdown.hero _oppo_heroes = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse__oppo_heroes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add__oppo_heroes()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse__oppo_heroes;
        if (input->ExpectTag(112)) goto parse__rseed;
        break;
      }

      // required uint32 _rseed = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse__rseed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_rseed_)));
          set_has__rseed();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(120)) goto parse__self_robot;
        break;
      }

      // optional uint32 _self_robot = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse__self_robot:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_self_robot_)));
          set_has__self_robot();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void pvp_check_msg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 _checkid = 1;
  if (has__checkid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->_checkid(), output);
  }

  // required uint32 _userid = 2;
  if (has__userid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->_userid(), output);
  }

  // optional string _username = 3;
  if (has__username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->_username().data(), this->_username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->_username(), output);
  }

  // optional uint32 _level = 4;
  if (has__level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->_level(), output);
  }

  // optional uint32 _avatar = 5;
  if (has__avatar()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->_avatar(), output);
  }

  // required uint32 _oppo_userid = 6;
  if (has__oppo_userid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->_oppo_userid(), output);
  }

  // optional string _oppo_name = 7;
  if (has__oppo_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->_oppo_name().data(), this->_oppo_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      7, this->_oppo_name(), output);
  }

  // optional uint32 _oppo_level = 8;
  if (has__oppo_level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->_oppo_level(), output);
  }

  // optional uint32 _oppo_avatar = 9;
  if (has__oppo_avatar()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(9, this->_oppo_avatar(), output);
  }

  // optional uint32 _oppo_robot = 10;
  if (has__oppo_robot()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->_oppo_robot(), output);
  }

  // optional .bcdown.result _result = 11 [default = victory];
  if (has__result()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->_result(), output);
  }

  // repeated .bcdown.hero _self_heroes = 12;
  for (int i = 0; i < this->_self_heroes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_self_heroes(i), output);
  }

  // repeated .bcdown.hero _oppo_heroes = 13;
  for (int i = 0; i < this->_oppo_heroes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_oppo_heroes(i), output);
  }

  // required uint32 _rseed = 14;
  if (has__rseed()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->_rseed(), output);
  }

  // optional uint32 _self_robot = 15;
  if (has__self_robot()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(15, this->_self_robot(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* pvp_check_msg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 _checkid = 1;
  if (has__checkid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->_checkid(), target);
  }

  // required uint32 _userid = 2;
  if (has__userid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->_userid(), target);
  }

  // optional string _username = 3;
  if (has__username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->_username().data(), this->_username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->_username(), target);
  }

  // optional uint32 _level = 4;
  if (has__level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->_level(), target);
  }

  // optional uint32 _avatar = 5;
  if (has__avatar()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->_avatar(), target);
  }

  // required uint32 _oppo_userid = 6;
  if (has__oppo_userid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->_oppo_userid(), target);
  }

  // optional string _oppo_name = 7;
  if (has__oppo_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->_oppo_name().data(), this->_oppo_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->_oppo_name(), target);
  }

  // optional uint32 _oppo_level = 8;
  if (has__oppo_level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->_oppo_level(), target);
  }

  // optional uint32 _oppo_avatar = 9;
  if (has__oppo_avatar()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(9, this->_oppo_avatar(), target);
  }

  // optional uint32 _oppo_robot = 10;
  if (has__oppo_robot()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->_oppo_robot(), target);
  }

  // optional .bcdown.result _result = 11 [default = victory];
  if (has__result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->_result(), target);
  }

  // repeated .bcdown.hero _self_heroes = 12;
  for (int i = 0; i < this->_self_heroes_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        12, this->_self_heroes(i), target);
  }

  // repeated .bcdown.hero _oppo_heroes = 13;
  for (int i = 0; i < this->_oppo_heroes_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        13, this->_oppo_heroes(i), target);
  }

  // required uint32 _rseed = 14;
  if (has__rseed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->_rseed(), target);
  }

  // optional uint32 _self_robot = 15;
  if (has__self_robot()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(15, this->_self_robot(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int pvp_check_msg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 _checkid = 1;
    if (has__checkid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_checkid());
    }

    // required uint32 _userid = 2;
    if (has__userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_userid());
    }

    // optional string _username = 3;
    if (has__username()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_username());
    }

    // optional uint32 _level = 4;
    if (has__level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_level());
    }

    // optional uint32 _avatar = 5;
    if (has__avatar()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_avatar());
    }

    // required uint32 _oppo_userid = 6;
    if (has__oppo_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_oppo_userid());
    }

    // optional string _oppo_name = 7;
    if (has__oppo_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_oppo_name());
    }

    // optional uint32 _oppo_level = 8;
    if (has__oppo_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_oppo_level());
    }

  }
  if (_has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    // optional uint32 _oppo_avatar = 9;
    if (has__oppo_avatar()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_oppo_avatar());
    }

    // optional uint32 _oppo_robot = 10;
    if (has__oppo_robot()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_oppo_robot());
    }

    // optional .bcdown.result _result = 11 [default = victory];
    if (has__result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->_result());
    }

    // required uint32 _rseed = 14;
    if (has__rseed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_rseed());
    }

    // optional uint32 _self_robot = 15;
    if (has__self_robot()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_self_robot());
    }

  }
  // repeated .bcdown.hero _self_heroes = 12;
  total_size += 1 * this->_self_heroes_size();
  for (int i = 0; i < this->_self_heroes_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->_self_heroes(i));
  }

  // repeated .bcdown.hero _oppo_heroes = 13;
  total_size += 1 * this->_oppo_heroes_size();
  for (int i = 0; i < this->_oppo_heroes_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->_oppo_heroes(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void pvp_check_msg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const pvp_check_msg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const pvp_check_msg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void pvp_check_msg::MergeFrom(const pvp_check_msg& from) {
  GOOGLE_CHECK_NE(&from, this);
  _self_heroes_.MergeFrom(from._self_heroes_);
  _oppo_heroes_.MergeFrom(from._oppo_heroes_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has__checkid()) {
      set__checkid(from._checkid());
    }
    if (from.has__userid()) {
      set__userid(from._userid());
    }
    if (from.has__username()) {
      set__username(from._username());
    }
    if (from.has__level()) {
      set__level(from._level());
    }
    if (from.has__avatar()) {
      set__avatar(from._avatar());
    }
    if (from.has__oppo_userid()) {
      set__oppo_userid(from._oppo_userid());
    }
    if (from.has__oppo_name()) {
      set__oppo_name(from._oppo_name());
    }
    if (from.has__oppo_level()) {
      set__oppo_level(from._oppo_level());
    }
  }
  if (from._has_bits_[8 / 32] & (0xffu << (8 % 32))) {
    if (from.has__oppo_avatar()) {
      set__oppo_avatar(from._oppo_avatar());
    }
    if (from.has__oppo_robot()) {
      set__oppo_robot(from._oppo_robot());
    }
    if (from.has__result()) {
      set__result(from._result());
    }
    if (from.has__rseed()) {
      set__rseed(from._rseed());
    }
    if (from.has__self_robot()) {
      set__self_robot(from._self_robot());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void pvp_check_msg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void pvp_check_msg::CopyFrom(const pvp_check_msg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool pvp_check_msg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00002023) != 0x00002023) return false;

  for (int i = 0; i < _self_heroes_size(); i++) {
    if (!this->_self_heroes(i).IsInitialized()) return false;
  }
  for (int i = 0; i < _oppo_heroes_size(); i++) {
    if (!this->_oppo_heroes(i).IsInitialized()) return false;
  }
  return true;
}

void pvp_check_msg::Swap(pvp_check_msg* other) {
  if (other != this) {
    std::swap(_checkid_, other->_checkid_);
    std::swap(_userid_, other->_userid_);
    std::swap(_username_, other->_username_);
    std::swap(_level_, other->_level_);
    std::swap(_avatar_, other->_avatar_);
    std::swap(_oppo_userid_, other->_oppo_userid_);
    std::swap(_oppo_name_, other->_oppo_name_);
    std::swap(_oppo_level_, other->_oppo_level_);
    std::swap(_oppo_avatar_, other->_oppo_avatar_);
    std::swap(_oppo_robot_, other->_oppo_robot_);
    std::swap(_result_, other->_result_);
    _self_heroes_.Swap(&other->_self_heroes_);
    _oppo_heroes_.Swap(&other->_oppo_heroes_);
    std::swap(_rseed_, other->_rseed_);
    std::swap(_self_robot_, other->_self_robot_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata pvp_check_msg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = pvp_check_msg_descriptor_;
  metadata.reflection = pvp_check_msg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int tbc_check_msg::kCheckidFieldNumber;
const int tbc_check_msg::kUseridFieldNumber;
const int tbc_check_msg::kUsernameFieldNumber;
const int tbc_check_msg::kOppoUseridFieldNumber;
const int tbc_check_msg::kOppoNameFieldNumber;
const int tbc_check_msg::kOppoRobotFieldNumber;
const int tbc_check_msg::kResultFieldNumber;
const int tbc_check_msg::kSelfHeroesFieldNumber;
const int tbc_check_msg::kOppoHeroesFieldNumber;
const int tbc_check_msg::kRseedFieldNumber;
const int tbc_check_msg::kSelfRobotFieldNumber;
const int tbc_check_msg::kSelfDynaStartFieldNumber;
const int tbc_check_msg::kSelfDynaEndFieldNumber;
const int tbc_check_msg::kOppoDynaStartFieldNumber;
const int tbc_check_msg::kOppoDynaEndFieldNumber;
const int tbc_check_msg::kOprationsFieldNumber;
const int tbc_check_msg::kCliBattleTimeFieldNumber;
#endif  // !_MSC_VER

tbc_check_msg::tbc_check_msg()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void tbc_check_msg::InitAsDefaultInstance() {
}

tbc_check_msg::tbc_check_msg(const tbc_check_msg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void tbc_check_msg::SharedCtor() {
  _cached_size_ = 0;
  _checkid_ = 0u;
  _userid_ = 0u;
  _username_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  _oppo_userid_ = 0u;
  _oppo_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  _oppo_robot_ = 0u;
  _result_ = 0;
  _rseed_ = 0u;
  _self_robot_ = 0u;
  _cli_battle_time_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

tbc_check_msg::~tbc_check_msg() {
  SharedDtor();
}

void tbc_check_msg::SharedDtor() {
  if (_username_ != &::google::protobuf::internal::kEmptyString) {
    delete _username_;
  }
  if (_oppo_name_ != &::google::protobuf::internal::kEmptyString) {
    delete _oppo_name_;
  }
  if (this != default_instance_) {
  }
}

void tbc_check_msg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* tbc_check_msg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return tbc_check_msg_descriptor_;
}

const tbc_check_msg& tbc_check_msg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bcdown_2eproto();
  return *default_instance_;
}

tbc_check_msg* tbc_check_msg::default_instance_ = NULL;

tbc_check_msg* tbc_check_msg::New() const {
  return new tbc_check_msg;
}

void tbc_check_msg::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    _checkid_ = 0u;
    _userid_ = 0u;
    if (has__username()) {
      if (_username_ != &::google::protobuf::internal::kEmptyString) {
        _username_->clear();
      }
    }
    _oppo_userid_ = 0u;
    if (has__oppo_name()) {
      if (_oppo_name_ != &::google::protobuf::internal::kEmptyString) {
        _oppo_name_->clear();
      }
    }
    _oppo_robot_ = 0u;
    _result_ = 0;
  }
  if (_has_bits_[9 / 32] & (0xffu << (9 % 32))) {
    _rseed_ = 0u;
    _self_robot_ = 0u;
  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    _cli_battle_time_ = 0u;
  }
  _self_heroes_.Clear();
  _oppo_heroes_.Clear();
  _self_dyna_start_.Clear();
  _self_dyna_end_.Clear();
  _oppo_dyna_start_.Clear();
  _oppo_dyna_end_.Clear();
  _oprations_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool tbc_check_msg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 _checkid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_checkid_)));
          set_has__checkid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse__userid;
        break;
      }

      // required uint32 _userid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse__userid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_userid_)));
          set_has__userid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse__username;
        break;
      }

      // optional string _username = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse__username:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->_username().data(), this->_username().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse__oppo_userid;
        break;
      }

      // required uint32 _oppo_userid = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse__oppo_userid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_oppo_userid_)));
          set_has__oppo_userid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse__oppo_name;
        break;
      }

      // optional string _oppo_name = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse__oppo_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable__oppo_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->_oppo_name().data(), this->_oppo_name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse__oppo_robot;
        break;
      }

      // optional uint32 _oppo_robot = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse__oppo_robot:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_oppo_robot_)));
          set_has__oppo_robot();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse__result;
        break;
      }

      // optional .bcdown.result _result = 7 [default = victory];
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse__result:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::bcdown::result_IsValid(value)) {
            set__result(static_cast< ::bcdown::result >(value));
          } else {
            mutable_unknown_fields()->AddVarint(7, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse__self_heroes;
        break;
      }

      // repeated .bcdown.hero _self_heroes = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse__self_heroes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add__self_heroes()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse__self_heroes;
        if (input->ExpectTag(74)) goto parse__oppo_heroes;
        break;
      }

      // repeated .bcdown.hero _oppo_heroes = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse__oppo_heroes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add__oppo_heroes()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse__oppo_heroes;
        if (input->ExpectTag(80)) goto parse__rseed;
        break;
      }

      // required uint32 _rseed = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse__rseed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_rseed_)));
          set_has__rseed();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(88)) goto parse__self_robot;
        break;
      }

      // optional uint32 _self_robot = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse__self_robot:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_self_robot_)));
          set_has__self_robot();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse__self_dyna_start;
        break;
      }

      // repeated .bcdown.hero_dyna _self_dyna_start = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse__self_dyna_start:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add__self_dyna_start()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse__self_dyna_start;
        if (input->ExpectTag(106)) goto parse__self_dyna_end;
        break;
      }

      // repeated .bcdown.hero_dyna _self_dyna_end = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse__self_dyna_end:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add__self_dyna_end()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(106)) goto parse__self_dyna_end;
        if (input->ExpectTag(114)) goto parse__oppo_dyna_start;
        break;
      }

      // repeated .bcdown.hero_dyna _oppo_dyna_start = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse__oppo_dyna_start:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add__oppo_dyna_start()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(114)) goto parse__oppo_dyna_start;
        if (input->ExpectTag(122)) goto parse__oppo_dyna_end;
        break;
      }

      // repeated .bcdown.hero_dyna _oppo_dyna_end = 15;
      case 15: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse__oppo_dyna_end:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add__oppo_dyna_end()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(122)) goto parse__oppo_dyna_end;
        if (input->ExpectTag(128)) goto parse__oprations;
        break;
      }

      // repeated uint32 _oprations = 16;
      case 16: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse__oprations:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 2, 128, input, this->mutable__oprations())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable__oprations())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(128)) goto parse__oprations;
        if (input->ExpectTag(136)) goto parse__cli_battle_time;
        break;
      }

      // optional uint32 _cli_battle_time = 17;
      case 17: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse__cli_battle_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_cli_battle_time_)));
          set_has__cli_battle_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void tbc_check_msg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 _checkid = 1;
  if (has__checkid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->_checkid(), output);
  }

  // required uint32 _userid = 2;
  if (has__userid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->_userid(), output);
  }

  // optional string _username = 3;
  if (has__username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->_username().data(), this->_username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->_username(), output);
  }

  // required uint32 _oppo_userid = 4;
  if (has__oppo_userid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->_oppo_userid(), output);
  }

  // optional string _oppo_name = 5;
  if (has__oppo_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->_oppo_name().data(), this->_oppo_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->_oppo_name(), output);
  }

  // optional uint32 _oppo_robot = 6;
  if (has__oppo_robot()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->_oppo_robot(), output);
  }

  // optional .bcdown.result _result = 7 [default = victory];
  if (has__result()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->_result(), output);
  }

  // repeated .bcdown.hero _self_heroes = 8;
  for (int i = 0; i < this->_self_heroes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_self_heroes(i), output);
  }

  // repeated .bcdown.hero _oppo_heroes = 9;
  for (int i = 0; i < this->_oppo_heroes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_oppo_heroes(i), output);
  }

  // required uint32 _rseed = 10;
  if (has__rseed()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(10, this->_rseed(), output);
  }

  // optional uint32 _self_robot = 11;
  if (has__self_robot()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->_self_robot(), output);
  }

  // repeated .bcdown.hero_dyna _self_dyna_start = 12;
  for (int i = 0; i < this->_self_dyna_start_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_self_dyna_start(i), output);
  }

  // repeated .bcdown.hero_dyna _self_dyna_end = 13;
  for (int i = 0; i < this->_self_dyna_end_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_self_dyna_end(i), output);
  }

  // repeated .bcdown.hero_dyna _oppo_dyna_start = 14;
  for (int i = 0; i < this->_oppo_dyna_start_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, this->_oppo_dyna_start(i), output);
  }

  // repeated .bcdown.hero_dyna _oppo_dyna_end = 15;
  for (int i = 0; i < this->_oppo_dyna_end_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, this->_oppo_dyna_end(i), output);
  }

  // repeated uint32 _oprations = 16;
  for (int i = 0; i < this->_oprations_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      16, this->_oprations(i), output);
  }

  // optional uint32 _cli_battle_time = 17;
  if (has__cli_battle_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(17, this->_cli_battle_time(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* tbc_check_msg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 _checkid = 1;
  if (has__checkid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->_checkid(), target);
  }

  // required uint32 _userid = 2;
  if (has__userid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->_userid(), target);
  }

  // optional string _username = 3;
  if (has__username()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->_username().data(), this->_username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->_username(), target);
  }

  // required uint32 _oppo_userid = 4;
  if (has__oppo_userid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->_oppo_userid(), target);
  }

  // optional string _oppo_name = 5;
  if (has__oppo_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->_oppo_name().data(), this->_oppo_name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->_oppo_name(), target);
  }

  // optional uint32 _oppo_robot = 6;
  if (has__oppo_robot()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->_oppo_robot(), target);
  }

  // optional .bcdown.result _result = 7 [default = victory];
  if (has__result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->_result(), target);
  }

  // repeated .bcdown.hero _self_heroes = 8;
  for (int i = 0; i < this->_self_heroes_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->_self_heroes(i), target);
  }

  // repeated .bcdown.hero _oppo_heroes = 9;
  for (int i = 0; i < this->_oppo_heroes_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->_oppo_heroes(i), target);
  }

  // required uint32 _rseed = 10;
  if (has__rseed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(10, this->_rseed(), target);
  }

  // optional uint32 _self_robot = 11;
  if (has__self_robot()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->_self_robot(), target);
  }

  // repeated .bcdown.hero_dyna _self_dyna_start = 12;
  for (int i = 0; i < this->_self_dyna_start_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        12, this->_self_dyna_start(i), target);
  }

  // repeated .bcdown.hero_dyna _self_dyna_end = 13;
  for (int i = 0; i < this->_self_dyna_end_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        13, this->_self_dyna_end(i), target);
  }

  // repeated .bcdown.hero_dyna _oppo_dyna_start = 14;
  for (int i = 0; i < this->_oppo_dyna_start_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        14, this->_oppo_dyna_start(i), target);
  }

  // repeated .bcdown.hero_dyna _oppo_dyna_end = 15;
  for (int i = 0; i < this->_oppo_dyna_end_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        15, this->_oppo_dyna_end(i), target);
  }

  // repeated uint32 _oprations = 16;
  for (int i = 0; i < this->_oprations_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(16, this->_oprations(i), target);
  }

  // optional uint32 _cli_battle_time = 17;
  if (has__cli_battle_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(17, this->_cli_battle_time(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int tbc_check_msg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 _checkid = 1;
    if (has__checkid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_checkid());
    }

    // required uint32 _userid = 2;
    if (has__userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_userid());
    }

    // optional string _username = 3;
    if (has__username()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_username());
    }

    // required uint32 _oppo_userid = 4;
    if (has__oppo_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_oppo_userid());
    }

    // optional string _oppo_name = 5;
    if (has__oppo_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->_oppo_name());
    }

    // optional uint32 _oppo_robot = 6;
    if (has__oppo_robot()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_oppo_robot());
    }

    // optional .bcdown.result _result = 7 [default = victory];
    if (has__result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->_result());
    }

  }
  if (_has_bits_[9 / 32] & (0xffu << (9 % 32))) {
    // required uint32 _rseed = 10;
    if (has__rseed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_rseed());
    }

    // optional uint32 _self_robot = 11;
    if (has__self_robot()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_self_robot());
    }

  }
  if (_has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    // optional uint32 _cli_battle_time = 17;
    if (has__cli_battle_time()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_cli_battle_time());
    }

  }
  // repeated .bcdown.hero _self_heroes = 8;
  total_size += 1 * this->_self_heroes_size();
  for (int i = 0; i < this->_self_heroes_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->_self_heroes(i));
  }

  // repeated .bcdown.hero _oppo_heroes = 9;
  total_size += 1 * this->_oppo_heroes_size();
  for (int i = 0; i < this->_oppo_heroes_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->_oppo_heroes(i));
  }

  // repeated .bcdown.hero_dyna _self_dyna_start = 12;
  total_size += 1 * this->_self_dyna_start_size();
  for (int i = 0; i < this->_self_dyna_start_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->_self_dyna_start(i));
  }

  // repeated .bcdown.hero_dyna _self_dyna_end = 13;
  total_size += 1 * this->_self_dyna_end_size();
  for (int i = 0; i < this->_self_dyna_end_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->_self_dyna_end(i));
  }

  // repeated .bcdown.hero_dyna _oppo_dyna_start = 14;
  total_size += 1 * this->_oppo_dyna_start_size();
  for (int i = 0; i < this->_oppo_dyna_start_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->_oppo_dyna_start(i));
  }

  // repeated .bcdown.hero_dyna _oppo_dyna_end = 15;
  total_size += 1 * this->_oppo_dyna_end_size();
  for (int i = 0; i < this->_oppo_dyna_end_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->_oppo_dyna_end(i));
  }

  // repeated uint32 _oprations = 16;
  {
    int data_size = 0;
    for (int i = 0; i < this->_oprations_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->_oprations(i));
    }
    total_size += 2 * this->_oprations_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void tbc_check_msg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const tbc_check_msg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const tbc_check_msg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void tbc_check_msg::MergeFrom(const tbc_check_msg& from) {
  GOOGLE_CHECK_NE(&from, this);
  _self_heroes_.MergeFrom(from._self_heroes_);
  _oppo_heroes_.MergeFrom(from._oppo_heroes_);
  _self_dyna_start_.MergeFrom(from._self_dyna_start_);
  _self_dyna_end_.MergeFrom(from._self_dyna_end_);
  _oppo_dyna_start_.MergeFrom(from._oppo_dyna_start_);
  _oppo_dyna_end_.MergeFrom(from._oppo_dyna_end_);
  _oprations_.MergeFrom(from._oprations_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has__checkid()) {
      set__checkid(from._checkid());
    }
    if (from.has__userid()) {
      set__userid(from._userid());
    }
    if (from.has__username()) {
      set__username(from._username());
    }
    if (from.has__oppo_userid()) {
      set__oppo_userid(from._oppo_userid());
    }
    if (from.has__oppo_name()) {
      set__oppo_name(from._oppo_name());
    }
    if (from.has__oppo_robot()) {
      set__oppo_robot(from._oppo_robot());
    }
    if (from.has__result()) {
      set__result(from._result());
    }
  }
  if (from._has_bits_[9 / 32] & (0xffu << (9 % 32))) {
    if (from.has__rseed()) {
      set__rseed(from._rseed());
    }
    if (from.has__self_robot()) {
      set__self_robot(from._self_robot());
    }
  }
  if (from._has_bits_[16 / 32] & (0xffu << (16 % 32))) {
    if (from.has__cli_battle_time()) {
      set__cli_battle_time(from._cli_battle_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void tbc_check_msg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void tbc_check_msg::CopyFrom(const tbc_check_msg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool tbc_check_msg::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000020b) != 0x0000020b) return false;

  for (int i = 0; i < _self_heroes_size(); i++) {
    if (!this->_self_heroes(i).IsInitialized()) return false;
  }
  for (int i = 0; i < _oppo_heroes_size(); i++) {
    if (!this->_oppo_heroes(i).IsInitialized()) return false;
  }
  for (int i = 0; i < _self_dyna_start_size(); i++) {
    if (!this->_self_dyna_start(i).IsInitialized()) return false;
  }
  for (int i = 0; i < _self_dyna_end_size(); i++) {
    if (!this->_self_dyna_end(i).IsInitialized()) return false;
  }
  for (int i = 0; i < _oppo_dyna_start_size(); i++) {
    if (!this->_oppo_dyna_start(i).IsInitialized()) return false;
  }
  for (int i = 0; i < _oppo_dyna_end_size(); i++) {
    if (!this->_oppo_dyna_end(i).IsInitialized()) return false;
  }
  return true;
}

void tbc_check_msg::Swap(tbc_check_msg* other) {
  if (other != this) {
    std::swap(_checkid_, other->_checkid_);
    std::swap(_userid_, other->_userid_);
    std::swap(_username_, other->_username_);
    std::swap(_oppo_userid_, other->_oppo_userid_);
    std::swap(_oppo_name_, other->_oppo_name_);
    std::swap(_oppo_robot_, other->_oppo_robot_);
    std::swap(_result_, other->_result_);
    _self_heroes_.Swap(&other->_self_heroes_);
    _oppo_heroes_.Swap(&other->_oppo_heroes_);
    std::swap(_rseed_, other->_rseed_);
    std::swap(_self_robot_, other->_self_robot_);
    _self_dyna_start_.Swap(&other->_self_dyna_start_);
    _self_dyna_end_.Swap(&other->_self_dyna_end_);
    _oppo_dyna_start_.Swap(&other->_oppo_dyna_start_);
    _oppo_dyna_end_.Swap(&other->_oppo_dyna_end_);
    _oprations_.Swap(&other->_oprations_);
    std::swap(_cli_battle_time_, other->_cli_battle_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata tbc_check_msg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = tbc_check_msg_descriptor_;
  metadata.reflection = tbc_check_msg_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* excav_check_msg_oppo_type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return excav_check_msg_oppo_type_descriptor_;
}
bool excav_check_msg_oppo_type_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const excav_check_msg_oppo_type excav_check_msg::monster;
const excav_check_msg_oppo_type excav_check_msg::player;
const excav_check_msg_oppo_type excav_check_msg::oppo_type_MIN;
const excav_check_msg_oppo_type excav_check_msg::oppo_type_MAX;
const int excav_check_msg::oppo_type_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int excav_check_msg::kCheckidFieldNumber;
const int excav_check_msg::kUseridFieldNumber;
const int excav_check_msg::kOppoUseridFieldNumber;
const int excav_check_msg::kOppoTypeFieldNumber;
const int excav_check_msg::kResultFieldNumber;
const int excav_check_msg::kSelfHeroesFieldNumber;
const int excav_check_msg::kOppoHeroesFieldNumber;
const int excav_check_msg::kRseedFieldNumber;
const int excav_check_msg::kSelfDynaStartFieldNumber;
const int excav_check_msg::kSelfDynaEndFieldNumber;
const int excav_check_msg::kOppoDynaStartFieldNumber;
const int excav_check_msg::kOppoDynaEndFieldNumber;
const int excav_check_msg::kOprationsFieldNumber;
const int excav_check_msg::kCliBattleTimeFieldNumber;
#endif  // !_MSC_VER

excav_check_msg::excav_check_msg()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void excav_check_msg::InitAsDefaultInstance() {
}

excav_check_msg::excav_check_msg(const excav_check_msg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void excav_check_msg::SharedCtor() {
  _cached_size_ = 0;
  _checkid_ = 0u;
  _userid_ = 0u;
  _oppo_userid_ = 0u;
  _oppo_type_ = 1;
  _result_ = 0;
  _rseed_ = 0u;
  _cli_battle_time_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

excav_check_msg::~excav_check_msg() {
  SharedDtor();
}

void excav_check_msg::SharedDtor() {
  if (this != default_instance_) {
  }
}

void excav_check_msg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* excav_check_msg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return excav_check_msg_descriptor_;
}

const excav_check_msg& excav_check_msg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bcdown_2eproto();
  return *default_instance_;
}

excav_check_msg* excav_check_msg::default_instance_ = NULL;

excav_check_msg* excav_check_msg::New() const {
  return new excav_check_msg;
}

void excav_check_msg::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    _checkid_ = 0u;
    _userid_ = 0u;
    _oppo_userid_ = 0u;
    _oppo_type_ = 1;
    _result_ = 0;
    _rseed_ = 0u;
  }
  if (_has_bits_[13 / 32] & (0xffu << (13 % 32))) {
    _cli_battle_time_ = 0u;
  }
  _self_heroes_.Clear();
  _oppo_heroes_.Clear();
  _self_dyna_start_.Clear();
  _self_dyna_end_.Clear();
  _oppo_dyna_start_.Clear();
  _oppo_dyna_end_.Clear();
  _oprations_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool excav_check_msg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 _checkid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_checkid_)));
          set_has__checkid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse__userid;
        break;
      }

      // required uint32 _userid = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse__userid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_userid_)));
          set_has__userid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse__oppo_userid;
        break;
      }

      // required uint32 _oppo_userid = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse__oppo_userid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_oppo_userid_)));
          set_has__oppo_userid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse__oppo_type;
        break;
      }

      // optional .bcdown.excav_check_msg.oppo_type _oppo_type = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse__oppo_type:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::bcdown::excav_check_msg_oppo_type_IsValid(value)) {
            set__oppo_type(static_cast< ::bcdown::excav_check_msg_oppo_type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(4, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse__result;
        break;
      }

      // optional .bcdown.result _result = 5 [default = victory];
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse__result:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::bcdown::result_IsValid(value)) {
            set__result(static_cast< ::bcdown::result >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse__self_heroes;
        break;
      }

      // repeated .bcdown.hero _self_heroes = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse__self_heroes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add__self_heroes()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse__self_heroes;
        if (input->ExpectTag(58)) goto parse__oppo_heroes;
        break;
      }

      // repeated .bcdown.hero _oppo_heroes = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse__oppo_heroes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add__oppo_heroes()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse__oppo_heroes;
        if (input->ExpectTag(64)) goto parse__rseed;
        break;
      }

      // required uint32 _rseed = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse__rseed:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_rseed_)));
          set_has__rseed();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse__self_dyna_start;
        break;
      }

      // repeated .bcdown.hero_dyna _self_dyna_start = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse__self_dyna_start:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add__self_dyna_start()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse__self_dyna_start;
        if (input->ExpectTag(82)) goto parse__self_dyna_end;
        break;
      }

      // repeated .bcdown.hero_dyna _self_dyna_end = 10;
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse__self_dyna_end:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add__self_dyna_end()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(82)) goto parse__self_dyna_end;
        if (input->ExpectTag(90)) goto parse__oppo_dyna_start;
        break;
      }

      // repeated .bcdown.hero_dyna _oppo_dyna_start = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse__oppo_dyna_start:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add__oppo_dyna_start()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse__oppo_dyna_start;
        if (input->ExpectTag(98)) goto parse__oppo_dyna_end;
        break;
      }

      // repeated .bcdown.hero_dyna _oppo_dyna_end = 12;
      case 12: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse__oppo_dyna_end:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add__oppo_dyna_end()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(98)) goto parse__oppo_dyna_end;
        if (input->ExpectTag(104)) goto parse__oprations;
        break;
      }

      // repeated uint32 _oprations = 13;
      case 13: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse__oprations:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 104, input, this->mutable__oprations())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable__oprations())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(104)) goto parse__oprations;
        if (input->ExpectTag(112)) goto parse__cli_battle_time;
        break;
      }

      // optional uint32 _cli_battle_time = 14;
      case 14: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse__cli_battle_time:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_cli_battle_time_)));
          set_has__cli_battle_time();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void excav_check_msg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 _checkid = 1;
  if (has__checkid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->_checkid(), output);
  }

  // required uint32 _userid = 2;
  if (has__userid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->_userid(), output);
  }

  // required uint32 _oppo_userid = 3;
  if (has__oppo_userid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->_oppo_userid(), output);
  }

  // optional .bcdown.excav_check_msg.oppo_type _oppo_type = 4;
  if (has__oppo_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      4, this->_oppo_type(), output);
  }

  // optional .bcdown.result _result = 5 [default = victory];
  if (has__result()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->_result(), output);
  }

  // repeated .bcdown.hero _self_heroes = 6;
  for (int i = 0; i < this->_self_heroes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_self_heroes(i), output);
  }

  // repeated .bcdown.hero _oppo_heroes = 7;
  for (int i = 0; i < this->_oppo_heroes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_oppo_heroes(i), output);
  }

  // required uint32 _rseed = 8;
  if (has__rseed()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->_rseed(), output);
  }

  // repeated .bcdown.hero_dyna _self_dyna_start = 9;
  for (int i = 0; i < this->_self_dyna_start_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_self_dyna_start(i), output);
  }

  // repeated .bcdown.hero_dyna _self_dyna_end = 10;
  for (int i = 0; i < this->_self_dyna_end_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->_self_dyna_end(i), output);
  }

  // repeated .bcdown.hero_dyna _oppo_dyna_start = 11;
  for (int i = 0; i < this->_oppo_dyna_start_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, this->_oppo_dyna_start(i), output);
  }

  // repeated .bcdown.hero_dyna _oppo_dyna_end = 12;
  for (int i = 0; i < this->_oppo_dyna_end_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_oppo_dyna_end(i), output);
  }

  // repeated uint32 _oprations = 13;
  for (int i = 0; i < this->_oprations_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      13, this->_oprations(i), output);
  }

  // optional uint32 _cli_battle_time = 14;
  if (has__cli_battle_time()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->_cli_battle_time(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* excav_check_msg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 _checkid = 1;
  if (has__checkid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->_checkid(), target);
  }

  // required uint32 _userid = 2;
  if (has__userid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->_userid(), target);
  }

  // required uint32 _oppo_userid = 3;
  if (has__oppo_userid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->_oppo_userid(), target);
  }

  // optional .bcdown.excav_check_msg.oppo_type _oppo_type = 4;
  if (has__oppo_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      4, this->_oppo_type(), target);
  }

  // optional .bcdown.result _result = 5 [default = victory];
  if (has__result()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->_result(), target);
  }

  // repeated .bcdown.hero _self_heroes = 6;
  for (int i = 0; i < this->_self_heroes_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->_self_heroes(i), target);
  }

  // repeated .bcdown.hero _oppo_heroes = 7;
  for (int i = 0; i < this->_oppo_heroes_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->_oppo_heroes(i), target);
  }

  // required uint32 _rseed = 8;
  if (has__rseed()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->_rseed(), target);
  }

  // repeated .bcdown.hero_dyna _self_dyna_start = 9;
  for (int i = 0; i < this->_self_dyna_start_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->_self_dyna_start(i), target);
  }

  // repeated .bcdown.hero_dyna _self_dyna_end = 10;
  for (int i = 0; i < this->_self_dyna_end_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        10, this->_self_dyna_end(i), target);
  }

  // repeated .bcdown.hero_dyna _oppo_dyna_start = 11;
  for (int i = 0; i < this->_oppo_dyna_start_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        11, this->_oppo_dyna_start(i), target);
  }

  // repeated .bcdown.hero_dyna _oppo_dyna_end = 12;
  for (int i = 0; i < this->_oppo_dyna_end_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        12, this->_oppo_dyna_end(i), target);
  }

  // repeated uint32 _oprations = 13;
  for (int i = 0; i < this->_oprations_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(13, this->_oprations(i), target);
  }

  // optional uint32 _cli_battle_time = 14;
  if (has__cli_battle_time()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->_cli_battle_time(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int excav_check_msg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 _checkid = 1;
    if (has__checkid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_checkid());
    }

    // required uint32 _userid = 2;
    if (has__userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_userid());
    }

    // required uint32 _oppo_userid = 3;
    if (has__oppo_userid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_oppo_userid());
    }

    // optional .bcdown.excav_check_msg.oppo_type _oppo_type = 4;
    if (has__oppo_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->_oppo_type());
    }

    // optional .bcdown.result _result = 5 [default = victory];
    if (has__result()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->_result());
    }

    // required uint32 _rseed = 8;
    if (has__rseed()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_rseed());
    }

  }
  if (_has_bits_[13 / 32] & (0xffu << (13 % 32))) {
    // optional uint32 _cli_battle_time = 14;
    if (has__cli_battle_time()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_cli_battle_time());
    }

  }
  // repeated .bcdown.hero _self_heroes = 6;
  total_size += 1 * this->_self_heroes_size();
  for (int i = 0; i < this->_self_heroes_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->_self_heroes(i));
  }

  // repeated .bcdown.hero _oppo_heroes = 7;
  total_size += 1 * this->_oppo_heroes_size();
  for (int i = 0; i < this->_oppo_heroes_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->_oppo_heroes(i));
  }

  // repeated .bcdown.hero_dyna _self_dyna_start = 9;
  total_size += 1 * this->_self_dyna_start_size();
  for (int i = 0; i < this->_self_dyna_start_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->_self_dyna_start(i));
  }

  // repeated .bcdown.hero_dyna _self_dyna_end = 10;
  total_size += 1 * this->_self_dyna_end_size();
  for (int i = 0; i < this->_self_dyna_end_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->_self_dyna_end(i));
  }

  // repeated .bcdown.hero_dyna _oppo_dyna_start = 11;
  total_size += 1 * this->_oppo_dyna_start_size();
  for (int i = 0; i < this->_oppo_dyna_start_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->_oppo_dyna_start(i));
  }

  // repeated .bcdown.hero_dyna _oppo_dyna_end = 12;
  total_size += 1 * this->_oppo_dyna_end_size();
  for (int i = 0; i < this->_oppo_dyna_end_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->_oppo_dyna_end(i));
  }

  // repeated uint32 _oprations = 13;
  {
    int data_size = 0;
    for (int i = 0; i < this->_oprations_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->_oprations(i));
    }
    total_size += 1 * this->_oprations_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void excav_check_msg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const excav_check_msg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const excav_check_msg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void excav_check_msg::MergeFrom(const excav_check_msg& from) {
  GOOGLE_CHECK_NE(&from, this);
  _self_heroes_.MergeFrom(from._self_heroes_);
  _oppo_heroes_.MergeFrom(from._oppo_heroes_);
  _self_dyna_start_.MergeFrom(from._self_dyna_start_);
  _self_dyna_end_.MergeFrom(from._self_dyna_end_);
  _oppo_dyna_start_.MergeFrom(from._oppo_dyna_start_);
  _oppo_dyna_end_.MergeFrom(from._oppo_dyna_end_);
  _oprations_.MergeFrom(from._oprations_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has__checkid()) {
      set__checkid(from._checkid());
    }
    if (from.has__userid()) {
      set__userid(from._userid());
    }
    if (from.has__oppo_userid()) {
      set__oppo_userid(from._oppo_userid());
    }
    if (from.has__oppo_type()) {
      set__oppo_type(from._oppo_type());
    }
    if (from.has__result()) {
      set__result(from._result());
    }
    if (from.has__rseed()) {
      set__rseed(from._rseed());
    }
  }
  if (from._has_bits_[13 / 32] & (0xffu << (13 % 32))) {
    if (from.has__cli_battle_time()) {
      set__cli_battle_time(from._cli_battle_time());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void excav_check_msg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void excav_check_msg::CopyFrom(const excav_check_msg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool excav_check_msg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000087) != 0x00000087) return false;

  for (int i = 0; i < _self_heroes_size(); i++) {
    if (!this->_self_heroes(i).IsInitialized()) return false;
  }
  for (int i = 0; i < _oppo_heroes_size(); i++) {
    if (!this->_oppo_heroes(i).IsInitialized()) return false;
  }
  for (int i = 0; i < _self_dyna_start_size(); i++) {
    if (!this->_self_dyna_start(i).IsInitialized()) return false;
  }
  for (int i = 0; i < _self_dyna_end_size(); i++) {
    if (!this->_self_dyna_end(i).IsInitialized()) return false;
  }
  for (int i = 0; i < _oppo_dyna_start_size(); i++) {
    if (!this->_oppo_dyna_start(i).IsInitialized()) return false;
  }
  for (int i = 0; i < _oppo_dyna_end_size(); i++) {
    if (!this->_oppo_dyna_end(i).IsInitialized()) return false;
  }
  return true;
}

void excav_check_msg::Swap(excav_check_msg* other) {
  if (other != this) {
    std::swap(_checkid_, other->_checkid_);
    std::swap(_userid_, other->_userid_);
    std::swap(_oppo_userid_, other->_oppo_userid_);
    std::swap(_oppo_type_, other->_oppo_type_);
    std::swap(_result_, other->_result_);
    _self_heroes_.Swap(&other->_self_heroes_);
    _oppo_heroes_.Swap(&other->_oppo_heroes_);
    std::swap(_rseed_, other->_rseed_);
    _self_dyna_start_.Swap(&other->_self_dyna_start_);
    _self_dyna_end_.Swap(&other->_self_dyna_end_);
    _oppo_dyna_start_.Swap(&other->_oppo_dyna_start_);
    _oppo_dyna_end_.Swap(&other->_oppo_dyna_end_);
    _oprations_.Swap(&other->_oprations_);
    std::swap(_cli_battle_time_, other->_cli_battle_time_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata excav_check_msg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = excav_check_msg_descriptor_;
  metadata.reflection = excav_check_msg_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int hero_equip::kIndexFieldNumber;
const int hero_equip::kItemIdFieldNumber;
const int hero_equip::kExpFieldNumber;
#endif  // !_MSC_VER

hero_equip::hero_equip()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void hero_equip::InitAsDefaultInstance() {
}

hero_equip::hero_equip(const hero_equip& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void hero_equip::SharedCtor() {
  _cached_size_ = 0;
  _index_ = 0u;
  _item_id_ = 0u;
  _exp_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

hero_equip::~hero_equip() {
  SharedDtor();
}

void hero_equip::SharedDtor() {
  if (this != default_instance_) {
  }
}

void hero_equip::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* hero_equip::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return hero_equip_descriptor_;
}

const hero_equip& hero_equip::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bcdown_2eproto();
  return *default_instance_;
}

hero_equip* hero_equip::default_instance_ = NULL;

hero_equip* hero_equip::New() const {
  return new hero_equip;
}

void hero_equip::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    _index_ = 0u;
    _item_id_ = 0u;
    _exp_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool hero_equip::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 _index = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_index_)));
          set_has__index();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse__item_id;
        break;
      }

      // required uint32 _item_id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse__item_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_item_id_)));
          set_has__item_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse__exp;
        break;
      }

      // required uint32 _exp = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse__exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_exp_)));
          set_has__exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void hero_equip::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 _index = 1;
  if (has__index()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->_index(), output);
  }

  // required uint32 _item_id = 2;
  if (has__item_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->_item_id(), output);
  }

  // required uint32 _exp = 3;
  if (has__exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->_exp(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* hero_equip::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 _index = 1;
  if (has__index()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->_index(), target);
  }

  // required uint32 _item_id = 2;
  if (has__item_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->_item_id(), target);
  }

  // required uint32 _exp = 3;
  if (has__exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->_exp(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int hero_equip::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 _index = 1;
    if (has__index()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_index());
    }

    // required uint32 _item_id = 2;
    if (has__item_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_item_id());
    }

    // required uint32 _exp = 3;
    if (has__exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_exp());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void hero_equip::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const hero_equip* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const hero_equip*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void hero_equip::MergeFrom(const hero_equip& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has__index()) {
      set__index(from._index());
    }
    if (from.has__item_id()) {
      set__item_id(from._item_id());
    }
    if (from.has__exp()) {
      set__exp(from._exp());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void hero_equip::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void hero_equip::CopyFrom(const hero_equip& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool hero_equip::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void hero_equip::Swap(hero_equip* other) {
  if (other != this) {
    std::swap(_index_, other->_index_);
    std::swap(_item_id_, other->_item_id_);
    std::swap(_exp_, other->_exp_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata hero_equip::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = hero_equip_descriptor_;
  metadata.reflection = hero_equip_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* hero_status_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return hero_status_descriptor_;
}
bool hero_status_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const hero_status hero::idle;
const hero_status hero::hire;
const hero_status hero::mining;
const hero_status hero::status_MIN;
const hero_status hero::status_MAX;
const int hero::status_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int hero::kTidFieldNumber;
const int hero::kRankFieldNumber;
const int hero::kLevelFieldNumber;
const int hero::kStarsFieldNumber;
const int hero::kExpFieldNumber;
const int hero::kGsFieldNumber;
const int hero::kStateFieldNumber;
const int hero::kSkillLevelsFieldNumber;
const int hero::kItemsFieldNumber;
#endif  // !_MSC_VER

hero::hero()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void hero::InitAsDefaultInstance() {
}

hero::hero(const hero& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void hero::SharedCtor() {
  _cached_size_ = 0;
  _tid_ = 0u;
  _rank_ = 0u;
  _level_ = 0u;
  _stars_ = 0u;
  _exp_ = 0u;
  _gs_ = 0u;
  _state_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

hero::~hero() {
  SharedDtor();
}

void hero::SharedDtor() {
  if (this != default_instance_) {
  }
}

void hero::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* hero::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return hero_descriptor_;
}

const hero& hero::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bcdown_2eproto();
  return *default_instance_;
}

hero* hero::default_instance_ = NULL;

hero* hero::New() const {
  return new hero;
}

void hero::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    _tid_ = 0u;
    _rank_ = 0u;
    _level_ = 0u;
    _stars_ = 0u;
    _exp_ = 0u;
    _gs_ = 0u;
    _state_ = 0;
  }
  _skill_levels_.Clear();
  _items_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool hero::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 _tid = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_tid_)));
          set_has__tid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse__rank;
        break;
      }

      // optional uint32 _rank = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse__rank:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_rank_)));
          set_has__rank();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse__level;
        break;
      }

      // required uint32 _level = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse__level:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_level_)));
          set_has__level();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse__stars;
        break;
      }

      // required uint32 _stars = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse__stars:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_stars_)));
          set_has__stars();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse__exp;
        break;
      }

      // required uint32 _exp = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse__exp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_exp_)));
          set_has__exp();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse__gs;
        break;
      }

      // required uint32 _gs = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse__gs:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_gs_)));
          set_has__gs();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse__state;
        break;
      }

      // required .bcdown.hero.status _state = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse__state:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::bcdown::hero_status_IsValid(value)) {
            set__state(static_cast< ::bcdown::hero_status >(value));
          } else {
            mutable_unknown_fields()->AddVarint(7, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse__skill_levels;
        break;
      }

      // repeated uint32 _skill_levels = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse__skill_levels:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 64, input, this->mutable__skill_levels())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable__skill_levels())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(64)) goto parse__skill_levels;
        if (input->ExpectTag(74)) goto parse__items;
        break;
      }

      // repeated .bcdown.hero_equip _items = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse__items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add__items()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse__items;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void hero::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 _tid = 1;
  if (has__tid()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->_tid(), output);
  }

  // optional uint32 _rank = 2;
  if (has__rank()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->_rank(), output);
  }

  // required uint32 _level = 3;
  if (has__level()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->_level(), output);
  }

  // required uint32 _stars = 4;
  if (has__stars()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->_stars(), output);
  }

  // required uint32 _exp = 5;
  if (has__exp()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->_exp(), output);
  }

  // required uint32 _gs = 6;
  if (has__gs()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->_gs(), output);
  }

  // required .bcdown.hero.status _state = 7;
  if (has__state()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      7, this->_state(), output);
  }

  // repeated uint32 _skill_levels = 8;
  for (int i = 0; i < this->_skill_levels_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      8, this->_skill_levels(i), output);
  }

  // repeated .bcdown.hero_equip _items = 9;
  for (int i = 0; i < this->_items_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->_items(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* hero::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 _tid = 1;
  if (has__tid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->_tid(), target);
  }

  // optional uint32 _rank = 2;
  if (has__rank()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->_rank(), target);
  }

  // required uint32 _level = 3;
  if (has__level()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->_level(), target);
  }

  // required uint32 _stars = 4;
  if (has__stars()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->_stars(), target);
  }

  // required uint32 _exp = 5;
  if (has__exp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->_exp(), target);
  }

  // required uint32 _gs = 6;
  if (has__gs()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->_gs(), target);
  }

  // required .bcdown.hero.status _state = 7;
  if (has__state()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      7, this->_state(), target);
  }

  // repeated uint32 _skill_levels = 8;
  for (int i = 0; i < this->_skill_levels_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32ToArray(8, this->_skill_levels(i), target);
  }

  // repeated .bcdown.hero_equip _items = 9;
  for (int i = 0; i < this->_items_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->_items(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int hero::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 _tid = 1;
    if (has__tid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_tid());
    }

    // optional uint32 _rank = 2;
    if (has__rank()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_rank());
    }

    // required uint32 _level = 3;
    if (has__level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_level());
    }

    // required uint32 _stars = 4;
    if (has__stars()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_stars());
    }

    // required uint32 _exp = 5;
    if (has__exp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_exp());
    }

    // required uint32 _gs = 6;
    if (has__gs()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_gs());
    }

    // required .bcdown.hero.status _state = 7;
    if (has__state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->_state());
    }

  }
  // repeated uint32 _skill_levels = 8;
  {
    int data_size = 0;
    for (int i = 0; i < this->_skill_levels_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->_skill_levels(i));
    }
    total_size += 1 * this->_skill_levels_size() + data_size;
  }

  // repeated .bcdown.hero_equip _items = 9;
  total_size += 1 * this->_items_size();
  for (int i = 0; i < this->_items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->_items(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void hero::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const hero* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const hero*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void hero::MergeFrom(const hero& from) {
  GOOGLE_CHECK_NE(&from, this);
  _skill_levels_.MergeFrom(from._skill_levels_);
  _items_.MergeFrom(from._items_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has__tid()) {
      set__tid(from._tid());
    }
    if (from.has__rank()) {
      set__rank(from._rank());
    }
    if (from.has__level()) {
      set__level(from._level());
    }
    if (from.has__stars()) {
      set__stars(from._stars());
    }
    if (from.has__exp()) {
      set__exp(from._exp());
    }
    if (from.has__gs()) {
      set__gs(from._gs());
    }
    if (from.has__state()) {
      set__state(from._state());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void hero::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void hero::CopyFrom(const hero& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool hero::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000007d) != 0x0000007d) return false;

  for (int i = 0; i < _items_size(); i++) {
    if (!this->_items(i).IsInitialized()) return false;
  }
  return true;
}

void hero::Swap(hero* other) {
  if (other != this) {
    std::swap(_tid_, other->_tid_);
    std::swap(_rank_, other->_rank_);
    std::swap(_level_, other->_level_);
    std::swap(_stars_, other->_stars_);
    std::swap(_exp_, other->_exp_);
    std::swap(_gs_, other->_gs_);
    std::swap(_state_, other->_state_);
    _skill_levels_.Swap(&other->_skill_levels_);
    _items_.Swap(&other->_items_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata hero::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = hero_descriptor_;
  metadata.reflection = hero_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int hero_dyna::kHpPercFieldNumber;
const int hero_dyna::kMpPercFieldNumber;
const int hero_dyna::kCustomDataFieldNumber;
#endif  // !_MSC_VER

hero_dyna::hero_dyna()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void hero_dyna::InitAsDefaultInstance() {
}

hero_dyna::hero_dyna(const hero_dyna& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void hero_dyna::SharedCtor() {
  _cached_size_ = 0;
  _hp_perc_ = 0u;
  _mp_perc_ = 0u;
  _custom_data_ = 0u;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

hero_dyna::~hero_dyna() {
  SharedDtor();
}

void hero_dyna::SharedDtor() {
  if (this != default_instance_) {
  }
}

void hero_dyna::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* hero_dyna::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return hero_dyna_descriptor_;
}

const hero_dyna& hero_dyna::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_bcdown_2eproto();
  return *default_instance_;
}

hero_dyna* hero_dyna::default_instance_ = NULL;

hero_dyna* hero_dyna::New() const {
  return new hero_dyna;
}

void hero_dyna::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    _hp_perc_ = 0u;
    _mp_perc_ = 0u;
    _custom_data_ = 0u;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool hero_dyna::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 _hp_perc = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_hp_perc_)));
          set_has__hp_perc();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse__mp_perc;
        break;
      }

      // required uint32 _mp_perc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse__mp_perc:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_mp_perc_)));
          set_has__mp_perc();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse__custom_data;
        break;
      }

      // optional uint32 _custom_data = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse__custom_data:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &_custom_data_)));
          set_has__custom_data();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void hero_dyna::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required uint32 _hp_perc = 1;
  if (has__hp_perc()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->_hp_perc(), output);
  }

  // required uint32 _mp_perc = 2;
  if (has__mp_perc()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->_mp_perc(), output);
  }

  // optional uint32 _custom_data = 3;
  if (has__custom_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->_custom_data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* hero_dyna::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required uint32 _hp_perc = 1;
  if (has__hp_perc()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->_hp_perc(), target);
  }

  // required uint32 _mp_perc = 2;
  if (has__mp_perc()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->_mp_perc(), target);
  }

  // optional uint32 _custom_data = 3;
  if (has__custom_data()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->_custom_data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int hero_dyna::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 _hp_perc = 1;
    if (has__hp_perc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_hp_perc());
    }

    // required uint32 _mp_perc = 2;
    if (has__mp_perc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_mp_perc());
    }

    // optional uint32 _custom_data = 3;
    if (has__custom_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->_custom_data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void hero_dyna::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const hero_dyna* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const hero_dyna*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void hero_dyna::MergeFrom(const hero_dyna& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has__hp_perc()) {
      set__hp_perc(from._hp_perc());
    }
    if (from.has__mp_perc()) {
      set__mp_perc(from._mp_perc());
    }
    if (from.has__custom_data()) {
      set__custom_data(from._custom_data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void hero_dyna::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void hero_dyna::CopyFrom(const hero_dyna& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool hero_dyna::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void hero_dyna::Swap(hero_dyna* other) {
  if (other != this) {
    std::swap(_hp_perc_, other->_hp_perc_);
    std::swap(_mp_perc_, other->_mp_perc_);
    std::swap(_custom_data_, other->_custom_data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata hero_dyna::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = hero_dyna_descriptor_;
  metadata.reflection = hero_dyna_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace bcdown

// @@protoc_insertion_point(global_scope)
