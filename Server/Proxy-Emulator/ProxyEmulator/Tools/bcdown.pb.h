// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: bcdown.proto

#ifndef PROTOBUF_bcdown_2eproto__INCLUDED
#define PROTOBUF_bcdown_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace bcdown {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_bcdown_2eproto();
void protobuf_AssignDesc_bcdown_2eproto();
void protobuf_ShutdownFile_bcdown_2eproto();

class battlecheck;
class pve_check_msg;
class pvp_check_msg;
class tbc_check_msg;
class excav_check_msg;
class hero_equip;
class hero;
class hero_dyna;

enum excav_check_msg_oppo_type {
  excav_check_msg_oppo_type_monster = 1,
  excav_check_msg_oppo_type_player = 2
};
bool excav_check_msg_oppo_type_IsValid(int value);
const excav_check_msg_oppo_type excav_check_msg_oppo_type_oppo_type_MIN = excav_check_msg_oppo_type_monster;
const excav_check_msg_oppo_type excav_check_msg_oppo_type_oppo_type_MAX = excav_check_msg_oppo_type_player;
const int excav_check_msg_oppo_type_oppo_type_ARRAYSIZE = excav_check_msg_oppo_type_oppo_type_MAX + 1;

const ::google::protobuf::EnumDescriptor* excav_check_msg_oppo_type_descriptor();
inline const ::std::string& excav_check_msg_oppo_type_Name(excav_check_msg_oppo_type value) {
  return ::google::protobuf::internal::NameOfEnum(
    excav_check_msg_oppo_type_descriptor(), value);
}
inline bool excav_check_msg_oppo_type_Parse(
    const ::std::string& name, excav_check_msg_oppo_type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<excav_check_msg_oppo_type>(
    excav_check_msg_oppo_type_descriptor(), name, value);
}
enum hero_status {
  hero_status_idle = 0,
  hero_status_hire = 1,
  hero_status_mining = 2
};
bool hero_status_IsValid(int value);
const hero_status hero_status_status_MIN = hero_status_idle;
const hero_status hero_status_status_MAX = hero_status_mining;
const int hero_status_status_ARRAYSIZE = hero_status_status_MAX + 1;

const ::google::protobuf::EnumDescriptor* hero_status_descriptor();
inline const ::std::string& hero_status_Name(hero_status value) {
  return ::google::protobuf::internal::NameOfEnum(
    hero_status_descriptor(), value);
}
inline bool hero_status_Parse(
    const ::std::string& name, hero_status* value) {
  return ::google::protobuf::internal::ParseNamedEnum<hero_status>(
    hero_status_descriptor(), name, value);
}
enum result {
  victory = 0,
  defeat = 1,
  canceled = 2,
  timeout = 3
};
bool result_IsValid(int value);
const result result_MIN = victory;
const result result_MAX = timeout;
const int result_ARRAYSIZE = result_MAX + 1;

const ::google::protobuf::EnumDescriptor* result_descriptor();
inline const ::std::string& result_Name(result value) {
  return ::google::protobuf::internal::NameOfEnum(
    result_descriptor(), value);
}
inline bool result_Parse(
    const ::std::string& name, result* value) {
  return ::google::protobuf::internal::ParseNamedEnum<result>(
    result_descriptor(), name, value);
}
// ===================================================================

class battlecheck : public ::google::protobuf::Message {
 public:
  battlecheck();
  virtual ~battlecheck();

  battlecheck(const battlecheck& from);

  inline battlecheck& operator=(const battlecheck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const battlecheck& default_instance();

  void Swap(battlecheck* other);

  // implements Message ----------------------------------------------

  battlecheck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const battlecheck& from);
  void MergeFrom(const battlecheck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .bcdown.pve_check_msg _pve_msg = 1;
  inline int _pve_msg_size() const;
  inline void clear__pve_msg();
  static const int kPveMsgFieldNumber = 1;
  inline const ::bcdown::pve_check_msg& _pve_msg(int index) const;
  inline ::bcdown::pve_check_msg* mutable__pve_msg(int index);
  inline ::bcdown::pve_check_msg* add__pve_msg();
  inline const ::google::protobuf::RepeatedPtrField< ::bcdown::pve_check_msg >&
      _pve_msg() const;
  inline ::google::protobuf::RepeatedPtrField< ::bcdown::pve_check_msg >*
      mutable__pve_msg();

  // repeated .bcdown.pvp_check_msg _pvp_msg = 2;
  inline int _pvp_msg_size() const;
  inline void clear__pvp_msg();
  static const int kPvpMsgFieldNumber = 2;
  inline const ::bcdown::pvp_check_msg& _pvp_msg(int index) const;
  inline ::bcdown::pvp_check_msg* mutable__pvp_msg(int index);
  inline ::bcdown::pvp_check_msg* add__pvp_msg();
  inline const ::google::protobuf::RepeatedPtrField< ::bcdown::pvp_check_msg >&
      _pvp_msg() const;
  inline ::google::protobuf::RepeatedPtrField< ::bcdown::pvp_check_msg >*
      mutable__pvp_msg();

  // repeated .bcdown.tbc_check_msg _tbc_msg = 3;
  inline int _tbc_msg_size() const;
  inline void clear__tbc_msg();
  static const int kTbcMsgFieldNumber = 3;
  inline const ::bcdown::tbc_check_msg& _tbc_msg(int index) const;
  inline ::bcdown::tbc_check_msg* mutable__tbc_msg(int index);
  inline ::bcdown::tbc_check_msg* add__tbc_msg();
  inline const ::google::protobuf::RepeatedPtrField< ::bcdown::tbc_check_msg >&
      _tbc_msg() const;
  inline ::google::protobuf::RepeatedPtrField< ::bcdown::tbc_check_msg >*
      mutable__tbc_msg();

  // repeated .bcdown.excav_check_msg _excav_msg = 4;
  inline int _excav_msg_size() const;
  inline void clear__excav_msg();
  static const int kExcavMsgFieldNumber = 4;
  inline const ::bcdown::excav_check_msg& _excav_msg(int index) const;
  inline ::bcdown::excav_check_msg* mutable__excav_msg(int index);
  inline ::bcdown::excav_check_msg* add__excav_msg();
  inline const ::google::protobuf::RepeatedPtrField< ::bcdown::excav_check_msg >&
      _excav_msg() const;
  inline ::google::protobuf::RepeatedPtrField< ::bcdown::excav_check_msg >*
      mutable__excav_msg();

  // @@protoc_insertion_point(class_scope:bcdown.battlecheck)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::bcdown::pve_check_msg > _pve_msg_;
  ::google::protobuf::RepeatedPtrField< ::bcdown::pvp_check_msg > _pvp_msg_;
  ::google::protobuf::RepeatedPtrField< ::bcdown::tbc_check_msg > _tbc_msg_;
  ::google::protobuf::RepeatedPtrField< ::bcdown::excav_check_msg > _excav_msg_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_bcdown_2eproto();
  friend void protobuf_AssignDesc_bcdown_2eproto();
  friend void protobuf_ShutdownFile_bcdown_2eproto();

  void InitAsDefaultInstance();
  static battlecheck* default_instance_;
};
// -------------------------------------------------------------------

class pve_check_msg : public ::google::protobuf::Message {
 public:
  pve_check_msg();
  virtual ~pve_check_msg();

  pve_check_msg(const pve_check_msg& from);

  inline pve_check_msg& operator=(const pve_check_msg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pve_check_msg& default_instance();

  void Swap(pve_check_msg* other);

  // implements Message ----------------------------------------------

  pve_check_msg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pve_check_msg& from);
  void MergeFrom(const pve_check_msg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _checkid = 1;
  inline bool has__checkid() const;
  inline void clear__checkid();
  static const int kCheckidFieldNumber = 1;
  inline ::google::protobuf::uint32 _checkid() const;
  inline void set__checkid(::google::protobuf::uint32 value);

  // required uint32 _userid = 2;
  inline bool has__userid() const;
  inline void clear__userid();
  static const int kUseridFieldNumber = 2;
  inline ::google::protobuf::uint32 _userid() const;
  inline void set__userid(::google::protobuf::uint32 value);

  // required uint32 _stageid = 3;
  inline bool has__stageid() const;
  inline void clear__stageid();
  static const int kStageidFieldNumber = 3;
  inline ::google::protobuf::uint32 _stageid() const;
  inline void set__stageid(::google::protobuf::uint32 value);

  // required .bcdown.result _result = 4 [default = victory];
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 4;
  inline ::bcdown::result _result() const;
  inline void set__result(::bcdown::result value);

  // required uint32 _stars = 5;
  inline bool has__stars() const;
  inline void clear__stars();
  static const int kStarsFieldNumber = 5;
  inline ::google::protobuf::uint32 _stars() const;
  inline void set__stars(::google::protobuf::uint32 value);

  // repeated .bcdown.hero _heroes = 6;
  inline int _heroes_size() const;
  inline void clear__heroes();
  static const int kHeroesFieldNumber = 6;
  inline const ::bcdown::hero& _heroes(int index) const;
  inline ::bcdown::hero* mutable__heroes(int index);
  inline ::bcdown::hero* add__heroes();
  inline const ::google::protobuf::RepeatedPtrField< ::bcdown::hero >&
      _heroes() const;
  inline ::google::protobuf::RepeatedPtrField< ::bcdown::hero >*
      mutable__heroes();

  // repeated uint32 _oprations = 7;
  inline int _oprations_size() const;
  inline void clear__oprations();
  static const int kOprationsFieldNumber = 7;
  inline ::google::protobuf::uint32 _oprations(int index) const;
  inline void set__oprations(int index, ::google::protobuf::uint32 value);
  inline void add__oprations(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      _oprations() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable__oprations();

  // required uint32 _rseed = 8;
  inline bool has__rseed() const;
  inline void clear__rseed();
  static const int kRseedFieldNumber = 8;
  inline ::google::protobuf::uint32 _rseed() const;
  inline void set__rseed(::google::protobuf::uint32 value);

  // optional uint32 _cli_battle_time = 9;
  inline bool has__cli_battle_time() const;
  inline void clear__cli_battle_time();
  static const int kCliBattleTimeFieldNumber = 9;
  inline ::google::protobuf::uint32 _cli_battle_time() const;
  inline void set__cli_battle_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:bcdown.pve_check_msg)
 private:
  inline void set_has__checkid();
  inline void clear_has__checkid();
  inline void set_has__userid();
  inline void clear_has__userid();
  inline void set_has__stageid();
  inline void clear_has__stageid();
  inline void set_has__result();
  inline void clear_has__result();
  inline void set_has__stars();
  inline void clear_has__stars();
  inline void set_has__rseed();
  inline void clear_has__rseed();
  inline void set_has__cli_battle_time();
  inline void clear_has__cli_battle_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _checkid_;
  ::google::protobuf::uint32 _userid_;
  ::google::protobuf::uint32 _stageid_;
  int _result_;
  ::google::protobuf::RepeatedPtrField< ::bcdown::hero > _heroes_;
  ::google::protobuf::uint32 _stars_;
  ::google::protobuf::uint32 _rseed_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > _oprations_;
  ::google::protobuf::uint32 _cli_battle_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_bcdown_2eproto();
  friend void protobuf_AssignDesc_bcdown_2eproto();
  friend void protobuf_ShutdownFile_bcdown_2eproto();

  void InitAsDefaultInstance();
  static pve_check_msg* default_instance_;
};
// -------------------------------------------------------------------

class pvp_check_msg : public ::google::protobuf::Message {
 public:
  pvp_check_msg();
  virtual ~pvp_check_msg();

  pvp_check_msg(const pvp_check_msg& from);

  inline pvp_check_msg& operator=(const pvp_check_msg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const pvp_check_msg& default_instance();

  void Swap(pvp_check_msg* other);

  // implements Message ----------------------------------------------

  pvp_check_msg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const pvp_check_msg& from);
  void MergeFrom(const pvp_check_msg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _checkid = 1;
  inline bool has__checkid() const;
  inline void clear__checkid();
  static const int kCheckidFieldNumber = 1;
  inline ::google::protobuf::uint32 _checkid() const;
  inline void set__checkid(::google::protobuf::uint32 value);

  // required uint32 _userid = 2;
  inline bool has__userid() const;
  inline void clear__userid();
  static const int kUseridFieldNumber = 2;
  inline ::google::protobuf::uint32 _userid() const;
  inline void set__userid(::google::protobuf::uint32 value);

  // optional string _username = 3;
  inline bool has__username() const;
  inline void clear__username();
  static const int kUsernameFieldNumber = 3;
  inline const ::std::string& _username() const;
  inline void set__username(const ::std::string& value);
  inline void set__username(const char* value);
  inline void set__username(const char* value, size_t size);
  inline ::std::string* mutable__username();
  inline ::std::string* release__username();
  inline void set_allocated__username(::std::string* _username);

  // optional uint32 _level = 4;
  inline bool has__level() const;
  inline void clear__level();
  static const int kLevelFieldNumber = 4;
  inline ::google::protobuf::uint32 _level() const;
  inline void set__level(::google::protobuf::uint32 value);

  // optional uint32 _avatar = 5;
  inline bool has__avatar() const;
  inline void clear__avatar();
  static const int kAvatarFieldNumber = 5;
  inline ::google::protobuf::uint32 _avatar() const;
  inline void set__avatar(::google::protobuf::uint32 value);

  // required uint32 _oppo_userid = 6;
  inline bool has__oppo_userid() const;
  inline void clear__oppo_userid();
  static const int kOppoUseridFieldNumber = 6;
  inline ::google::protobuf::uint32 _oppo_userid() const;
  inline void set__oppo_userid(::google::protobuf::uint32 value);

  // optional string _oppo_name = 7;
  inline bool has__oppo_name() const;
  inline void clear__oppo_name();
  static const int kOppoNameFieldNumber = 7;
  inline const ::std::string& _oppo_name() const;
  inline void set__oppo_name(const ::std::string& value);
  inline void set__oppo_name(const char* value);
  inline void set__oppo_name(const char* value, size_t size);
  inline ::std::string* mutable__oppo_name();
  inline ::std::string* release__oppo_name();
  inline void set_allocated__oppo_name(::std::string* _oppo_name);

  // optional uint32 _oppo_level = 8;
  inline bool has__oppo_level() const;
  inline void clear__oppo_level();
  static const int kOppoLevelFieldNumber = 8;
  inline ::google::protobuf::uint32 _oppo_level() const;
  inline void set__oppo_level(::google::protobuf::uint32 value);

  // optional uint32 _oppo_avatar = 9;
  inline bool has__oppo_avatar() const;
  inline void clear__oppo_avatar();
  static const int kOppoAvatarFieldNumber = 9;
  inline ::google::protobuf::uint32 _oppo_avatar() const;
  inline void set__oppo_avatar(::google::protobuf::uint32 value);

  // optional uint32 _oppo_robot = 10;
  inline bool has__oppo_robot() const;
  inline void clear__oppo_robot();
  static const int kOppoRobotFieldNumber = 10;
  inline ::google::protobuf::uint32 _oppo_robot() const;
  inline void set__oppo_robot(::google::protobuf::uint32 value);

  // optional .bcdown.result _result = 11 [default = victory];
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 11;
  inline ::bcdown::result _result() const;
  inline void set__result(::bcdown::result value);

  // repeated .bcdown.hero _self_heroes = 12;
  inline int _self_heroes_size() const;
  inline void clear__self_heroes();
  static const int kSelfHeroesFieldNumber = 12;
  inline const ::bcdown::hero& _self_heroes(int index) const;
  inline ::bcdown::hero* mutable__self_heroes(int index);
  inline ::bcdown::hero* add__self_heroes();
  inline const ::google::protobuf::RepeatedPtrField< ::bcdown::hero >&
      _self_heroes() const;
  inline ::google::protobuf::RepeatedPtrField< ::bcdown::hero >*
      mutable__self_heroes();

  // repeated .bcdown.hero _oppo_heroes = 13;
  inline int _oppo_heroes_size() const;
  inline void clear__oppo_heroes();
  static const int kOppoHeroesFieldNumber = 13;
  inline const ::bcdown::hero& _oppo_heroes(int index) const;
  inline ::bcdown::hero* mutable__oppo_heroes(int index);
  inline ::bcdown::hero* add__oppo_heroes();
  inline const ::google::protobuf::RepeatedPtrField< ::bcdown::hero >&
      _oppo_heroes() const;
  inline ::google::protobuf::RepeatedPtrField< ::bcdown::hero >*
      mutable__oppo_heroes();

  // required uint32 _rseed = 14;
  inline bool has__rseed() const;
  inline void clear__rseed();
  static const int kRseedFieldNumber = 14;
  inline ::google::protobuf::uint32 _rseed() const;
  inline void set__rseed(::google::protobuf::uint32 value);

  // optional uint32 _self_robot = 15;
  inline bool has__self_robot() const;
  inline void clear__self_robot();
  static const int kSelfRobotFieldNumber = 15;
  inline ::google::protobuf::uint32 _self_robot() const;
  inline void set__self_robot(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:bcdown.pvp_check_msg)
 private:
  inline void set_has__checkid();
  inline void clear_has__checkid();
  inline void set_has__userid();
  inline void clear_has__userid();
  inline void set_has__username();
  inline void clear_has__username();
  inline void set_has__level();
  inline void clear_has__level();
  inline void set_has__avatar();
  inline void clear_has__avatar();
  inline void set_has__oppo_userid();
  inline void clear_has__oppo_userid();
  inline void set_has__oppo_name();
  inline void clear_has__oppo_name();
  inline void set_has__oppo_level();
  inline void clear_has__oppo_level();
  inline void set_has__oppo_avatar();
  inline void clear_has__oppo_avatar();
  inline void set_has__oppo_robot();
  inline void clear_has__oppo_robot();
  inline void set_has__result();
  inline void clear_has__result();
  inline void set_has__rseed();
  inline void clear_has__rseed();
  inline void set_has__self_robot();
  inline void clear_has__self_robot();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _checkid_;
  ::google::protobuf::uint32 _userid_;
  ::std::string* _username_;
  ::google::protobuf::uint32 _level_;
  ::google::protobuf::uint32 _avatar_;
  ::std::string* _oppo_name_;
  ::google::protobuf::uint32 _oppo_userid_;
  ::google::protobuf::uint32 _oppo_level_;
  ::google::protobuf::uint32 _oppo_avatar_;
  ::google::protobuf::uint32 _oppo_robot_;
  ::google::protobuf::RepeatedPtrField< ::bcdown::hero > _self_heroes_;
  int _result_;
  ::google::protobuf::uint32 _rseed_;
  ::google::protobuf::RepeatedPtrField< ::bcdown::hero > _oppo_heroes_;
  ::google::protobuf::uint32 _self_robot_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(15 + 31) / 32];

  friend void  protobuf_AddDesc_bcdown_2eproto();
  friend void protobuf_AssignDesc_bcdown_2eproto();
  friend void protobuf_ShutdownFile_bcdown_2eproto();

  void InitAsDefaultInstance();
  static pvp_check_msg* default_instance_;
};
// -------------------------------------------------------------------

class tbc_check_msg : public ::google::protobuf::Message {
 public:
  tbc_check_msg();
  virtual ~tbc_check_msg();

  tbc_check_msg(const tbc_check_msg& from);

  inline tbc_check_msg& operator=(const tbc_check_msg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const tbc_check_msg& default_instance();

  void Swap(tbc_check_msg* other);

  // implements Message ----------------------------------------------

  tbc_check_msg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const tbc_check_msg& from);
  void MergeFrom(const tbc_check_msg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _checkid = 1;
  inline bool has__checkid() const;
  inline void clear__checkid();
  static const int kCheckidFieldNumber = 1;
  inline ::google::protobuf::uint32 _checkid() const;
  inline void set__checkid(::google::protobuf::uint32 value);

  // required uint32 _userid = 2;
  inline bool has__userid() const;
  inline void clear__userid();
  static const int kUseridFieldNumber = 2;
  inline ::google::protobuf::uint32 _userid() const;
  inline void set__userid(::google::protobuf::uint32 value);

  // optional string _username = 3;
  inline bool has__username() const;
  inline void clear__username();
  static const int kUsernameFieldNumber = 3;
  inline const ::std::string& _username() const;
  inline void set__username(const ::std::string& value);
  inline void set__username(const char* value);
  inline void set__username(const char* value, size_t size);
  inline ::std::string* mutable__username();
  inline ::std::string* release__username();
  inline void set_allocated__username(::std::string* _username);

  // required uint32 _oppo_userid = 4;
  inline bool has__oppo_userid() const;
  inline void clear__oppo_userid();
  static const int kOppoUseridFieldNumber = 4;
  inline ::google::protobuf::uint32 _oppo_userid() const;
  inline void set__oppo_userid(::google::protobuf::uint32 value);

  // optional string _oppo_name = 5;
  inline bool has__oppo_name() const;
  inline void clear__oppo_name();
  static const int kOppoNameFieldNumber = 5;
  inline const ::std::string& _oppo_name() const;
  inline void set__oppo_name(const ::std::string& value);
  inline void set__oppo_name(const char* value);
  inline void set__oppo_name(const char* value, size_t size);
  inline ::std::string* mutable__oppo_name();
  inline ::std::string* release__oppo_name();
  inline void set_allocated__oppo_name(::std::string* _oppo_name);

  // optional uint32 _oppo_robot = 6;
  inline bool has__oppo_robot() const;
  inline void clear__oppo_robot();
  static const int kOppoRobotFieldNumber = 6;
  inline ::google::protobuf::uint32 _oppo_robot() const;
  inline void set__oppo_robot(::google::protobuf::uint32 value);

  // optional .bcdown.result _result = 7 [default = victory];
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 7;
  inline ::bcdown::result _result() const;
  inline void set__result(::bcdown::result value);

  // repeated .bcdown.hero _self_heroes = 8;
  inline int _self_heroes_size() const;
  inline void clear__self_heroes();
  static const int kSelfHeroesFieldNumber = 8;
  inline const ::bcdown::hero& _self_heroes(int index) const;
  inline ::bcdown::hero* mutable__self_heroes(int index);
  inline ::bcdown::hero* add__self_heroes();
  inline const ::google::protobuf::RepeatedPtrField< ::bcdown::hero >&
      _self_heroes() const;
  inline ::google::protobuf::RepeatedPtrField< ::bcdown::hero >*
      mutable__self_heroes();

  // repeated .bcdown.hero _oppo_heroes = 9;
  inline int _oppo_heroes_size() const;
  inline void clear__oppo_heroes();
  static const int kOppoHeroesFieldNumber = 9;
  inline const ::bcdown::hero& _oppo_heroes(int index) const;
  inline ::bcdown::hero* mutable__oppo_heroes(int index);
  inline ::bcdown::hero* add__oppo_heroes();
  inline const ::google::protobuf::RepeatedPtrField< ::bcdown::hero >&
      _oppo_heroes() const;
  inline ::google::protobuf::RepeatedPtrField< ::bcdown::hero >*
      mutable__oppo_heroes();

  // required uint32 _rseed = 10;
  inline bool has__rseed() const;
  inline void clear__rseed();
  static const int kRseedFieldNumber = 10;
  inline ::google::protobuf::uint32 _rseed() const;
  inline void set__rseed(::google::protobuf::uint32 value);

  // optional uint32 _self_robot = 11;
  inline bool has__self_robot() const;
  inline void clear__self_robot();
  static const int kSelfRobotFieldNumber = 11;
  inline ::google::protobuf::uint32 _self_robot() const;
  inline void set__self_robot(::google::protobuf::uint32 value);

  // repeated .bcdown.hero_dyna _self_dyna_start = 12;
  inline int _self_dyna_start_size() const;
  inline void clear__self_dyna_start();
  static const int kSelfDynaStartFieldNumber = 12;
  inline const ::bcdown::hero_dyna& _self_dyna_start(int index) const;
  inline ::bcdown::hero_dyna* mutable__self_dyna_start(int index);
  inline ::bcdown::hero_dyna* add__self_dyna_start();
  inline const ::google::protobuf::RepeatedPtrField< ::bcdown::hero_dyna >&
      _self_dyna_start() const;
  inline ::google::protobuf::RepeatedPtrField< ::bcdown::hero_dyna >*
      mutable__self_dyna_start();

  // repeated .bcdown.hero_dyna _self_dyna_end = 13;
  inline int _self_dyna_end_size() const;
  inline void clear__self_dyna_end();
  static const int kSelfDynaEndFieldNumber = 13;
  inline const ::bcdown::hero_dyna& _self_dyna_end(int index) const;
  inline ::bcdown::hero_dyna* mutable__self_dyna_end(int index);
  inline ::bcdown::hero_dyna* add__self_dyna_end();
  inline const ::google::protobuf::RepeatedPtrField< ::bcdown::hero_dyna >&
      _self_dyna_end() const;
  inline ::google::protobuf::RepeatedPtrField< ::bcdown::hero_dyna >*
      mutable__self_dyna_end();

  // repeated .bcdown.hero_dyna _oppo_dyna_start = 14;
  inline int _oppo_dyna_start_size() const;
  inline void clear__oppo_dyna_start();
  static const int kOppoDynaStartFieldNumber = 14;
  inline const ::bcdown::hero_dyna& _oppo_dyna_start(int index) const;
  inline ::bcdown::hero_dyna* mutable__oppo_dyna_start(int index);
  inline ::bcdown::hero_dyna* add__oppo_dyna_start();
  inline const ::google::protobuf::RepeatedPtrField< ::bcdown::hero_dyna >&
      _oppo_dyna_start() const;
  inline ::google::protobuf::RepeatedPtrField< ::bcdown::hero_dyna >*
      mutable__oppo_dyna_start();

  // repeated .bcdown.hero_dyna _oppo_dyna_end = 15;
  inline int _oppo_dyna_end_size() const;
  inline void clear__oppo_dyna_end();
  static const int kOppoDynaEndFieldNumber = 15;
  inline const ::bcdown::hero_dyna& _oppo_dyna_end(int index) const;
  inline ::bcdown::hero_dyna* mutable__oppo_dyna_end(int index);
  inline ::bcdown::hero_dyna* add__oppo_dyna_end();
  inline const ::google::protobuf::RepeatedPtrField< ::bcdown::hero_dyna >&
      _oppo_dyna_end() const;
  inline ::google::protobuf::RepeatedPtrField< ::bcdown::hero_dyna >*
      mutable__oppo_dyna_end();

  // repeated uint32 _oprations = 16;
  inline int _oprations_size() const;
  inline void clear__oprations();
  static const int kOprationsFieldNumber = 16;
  inline ::google::protobuf::uint32 _oprations(int index) const;
  inline void set__oprations(int index, ::google::protobuf::uint32 value);
  inline void add__oprations(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      _oprations() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable__oprations();

  // optional uint32 _cli_battle_time = 17;
  inline bool has__cli_battle_time() const;
  inline void clear__cli_battle_time();
  static const int kCliBattleTimeFieldNumber = 17;
  inline ::google::protobuf::uint32 _cli_battle_time() const;
  inline void set__cli_battle_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:bcdown.tbc_check_msg)
 private:
  inline void set_has__checkid();
  inline void clear_has__checkid();
  inline void set_has__userid();
  inline void clear_has__userid();
  inline void set_has__username();
  inline void clear_has__username();
  inline void set_has__oppo_userid();
  inline void clear_has__oppo_userid();
  inline void set_has__oppo_name();
  inline void clear_has__oppo_name();
  inline void set_has__oppo_robot();
  inline void clear_has__oppo_robot();
  inline void set_has__result();
  inline void clear_has__result();
  inline void set_has__rseed();
  inline void clear_has__rseed();
  inline void set_has__self_robot();
  inline void clear_has__self_robot();
  inline void set_has__cli_battle_time();
  inline void clear_has__cli_battle_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _checkid_;
  ::google::protobuf::uint32 _userid_;
  ::std::string* _username_;
  ::std::string* _oppo_name_;
  ::google::protobuf::uint32 _oppo_userid_;
  ::google::protobuf::uint32 _oppo_robot_;
  ::google::protobuf::RepeatedPtrField< ::bcdown::hero > _self_heroes_;
  int _result_;
  ::google::protobuf::uint32 _rseed_;
  ::google::protobuf::RepeatedPtrField< ::bcdown::hero > _oppo_heroes_;
  ::google::protobuf::RepeatedPtrField< ::bcdown::hero_dyna > _self_dyna_start_;
  ::google::protobuf::RepeatedPtrField< ::bcdown::hero_dyna > _self_dyna_end_;
  ::google::protobuf::RepeatedPtrField< ::bcdown::hero_dyna > _oppo_dyna_start_;
  ::google::protobuf::uint32 _self_robot_;
  ::google::protobuf::uint32 _cli_battle_time_;
  ::google::protobuf::RepeatedPtrField< ::bcdown::hero_dyna > _oppo_dyna_end_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > _oprations_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(17 + 31) / 32];

  friend void  protobuf_AddDesc_bcdown_2eproto();
  friend void protobuf_AssignDesc_bcdown_2eproto();
  friend void protobuf_ShutdownFile_bcdown_2eproto();

  void InitAsDefaultInstance();
  static tbc_check_msg* default_instance_;
};
// -------------------------------------------------------------------

class excav_check_msg : public ::google::protobuf::Message {
 public:
  excav_check_msg();
  virtual ~excav_check_msg();

  excav_check_msg(const excav_check_msg& from);

  inline excav_check_msg& operator=(const excav_check_msg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const excav_check_msg& default_instance();

  void Swap(excav_check_msg* other);

  // implements Message ----------------------------------------------

  excav_check_msg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const excav_check_msg& from);
  void MergeFrom(const excav_check_msg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef excav_check_msg_oppo_type oppo_type;
  static const oppo_type monster = excav_check_msg_oppo_type_monster;
  static const oppo_type player = excav_check_msg_oppo_type_player;
  static inline bool oppo_type_IsValid(int value) {
    return excav_check_msg_oppo_type_IsValid(value);
  }
  static const oppo_type oppo_type_MIN =
    excav_check_msg_oppo_type_oppo_type_MIN;
  static const oppo_type oppo_type_MAX =
    excav_check_msg_oppo_type_oppo_type_MAX;
  static const int oppo_type_ARRAYSIZE =
    excav_check_msg_oppo_type_oppo_type_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  oppo_type_descriptor() {
    return excav_check_msg_oppo_type_descriptor();
  }
  static inline const ::std::string& oppo_type_Name(oppo_type value) {
    return excav_check_msg_oppo_type_Name(value);
  }
  static inline bool oppo_type_Parse(const ::std::string& name,
      oppo_type* value) {
    return excav_check_msg_oppo_type_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required uint32 _checkid = 1;
  inline bool has__checkid() const;
  inline void clear__checkid();
  static const int kCheckidFieldNumber = 1;
  inline ::google::protobuf::uint32 _checkid() const;
  inline void set__checkid(::google::protobuf::uint32 value);

  // required uint32 _userid = 2;
  inline bool has__userid() const;
  inline void clear__userid();
  static const int kUseridFieldNumber = 2;
  inline ::google::protobuf::uint32 _userid() const;
  inline void set__userid(::google::protobuf::uint32 value);

  // required uint32 _oppo_userid = 3;
  inline bool has__oppo_userid() const;
  inline void clear__oppo_userid();
  static const int kOppoUseridFieldNumber = 3;
  inline ::google::protobuf::uint32 _oppo_userid() const;
  inline void set__oppo_userid(::google::protobuf::uint32 value);

  // optional .bcdown.excav_check_msg.oppo_type _oppo_type = 4;
  inline bool has__oppo_type() const;
  inline void clear__oppo_type();
  static const int kOppoTypeFieldNumber = 4;
  inline ::bcdown::excav_check_msg_oppo_type _oppo_type() const;
  inline void set__oppo_type(::bcdown::excav_check_msg_oppo_type value);

  // optional .bcdown.result _result = 5 [default = victory];
  inline bool has__result() const;
  inline void clear__result();
  static const int kResultFieldNumber = 5;
  inline ::bcdown::result _result() const;
  inline void set__result(::bcdown::result value);

  // repeated .bcdown.hero _self_heroes = 6;
  inline int _self_heroes_size() const;
  inline void clear__self_heroes();
  static const int kSelfHeroesFieldNumber = 6;
  inline const ::bcdown::hero& _self_heroes(int index) const;
  inline ::bcdown::hero* mutable__self_heroes(int index);
  inline ::bcdown::hero* add__self_heroes();
  inline const ::google::protobuf::RepeatedPtrField< ::bcdown::hero >&
      _self_heroes() const;
  inline ::google::protobuf::RepeatedPtrField< ::bcdown::hero >*
      mutable__self_heroes();

  // repeated .bcdown.hero _oppo_heroes = 7;
  inline int _oppo_heroes_size() const;
  inline void clear__oppo_heroes();
  static const int kOppoHeroesFieldNumber = 7;
  inline const ::bcdown::hero& _oppo_heroes(int index) const;
  inline ::bcdown::hero* mutable__oppo_heroes(int index);
  inline ::bcdown::hero* add__oppo_heroes();
  inline const ::google::protobuf::RepeatedPtrField< ::bcdown::hero >&
      _oppo_heroes() const;
  inline ::google::protobuf::RepeatedPtrField< ::bcdown::hero >*
      mutable__oppo_heroes();

  // required uint32 _rseed = 8;
  inline bool has__rseed() const;
  inline void clear__rseed();
  static const int kRseedFieldNumber = 8;
  inline ::google::protobuf::uint32 _rseed() const;
  inline void set__rseed(::google::protobuf::uint32 value);

  // repeated .bcdown.hero_dyna _self_dyna_start = 9;
  inline int _self_dyna_start_size() const;
  inline void clear__self_dyna_start();
  static const int kSelfDynaStartFieldNumber = 9;
  inline const ::bcdown::hero_dyna& _self_dyna_start(int index) const;
  inline ::bcdown::hero_dyna* mutable__self_dyna_start(int index);
  inline ::bcdown::hero_dyna* add__self_dyna_start();
  inline const ::google::protobuf::RepeatedPtrField< ::bcdown::hero_dyna >&
      _self_dyna_start() const;
  inline ::google::protobuf::RepeatedPtrField< ::bcdown::hero_dyna >*
      mutable__self_dyna_start();

  // repeated .bcdown.hero_dyna _self_dyna_end = 10;
  inline int _self_dyna_end_size() const;
  inline void clear__self_dyna_end();
  static const int kSelfDynaEndFieldNumber = 10;
  inline const ::bcdown::hero_dyna& _self_dyna_end(int index) const;
  inline ::bcdown::hero_dyna* mutable__self_dyna_end(int index);
  inline ::bcdown::hero_dyna* add__self_dyna_end();
  inline const ::google::protobuf::RepeatedPtrField< ::bcdown::hero_dyna >&
      _self_dyna_end() const;
  inline ::google::protobuf::RepeatedPtrField< ::bcdown::hero_dyna >*
      mutable__self_dyna_end();

  // repeated .bcdown.hero_dyna _oppo_dyna_start = 11;
  inline int _oppo_dyna_start_size() const;
  inline void clear__oppo_dyna_start();
  static const int kOppoDynaStartFieldNumber = 11;
  inline const ::bcdown::hero_dyna& _oppo_dyna_start(int index) const;
  inline ::bcdown::hero_dyna* mutable__oppo_dyna_start(int index);
  inline ::bcdown::hero_dyna* add__oppo_dyna_start();
  inline const ::google::protobuf::RepeatedPtrField< ::bcdown::hero_dyna >&
      _oppo_dyna_start() const;
  inline ::google::protobuf::RepeatedPtrField< ::bcdown::hero_dyna >*
      mutable__oppo_dyna_start();

  // repeated .bcdown.hero_dyna _oppo_dyna_end = 12;
  inline int _oppo_dyna_end_size() const;
  inline void clear__oppo_dyna_end();
  static const int kOppoDynaEndFieldNumber = 12;
  inline const ::bcdown::hero_dyna& _oppo_dyna_end(int index) const;
  inline ::bcdown::hero_dyna* mutable__oppo_dyna_end(int index);
  inline ::bcdown::hero_dyna* add__oppo_dyna_end();
  inline const ::google::protobuf::RepeatedPtrField< ::bcdown::hero_dyna >&
      _oppo_dyna_end() const;
  inline ::google::protobuf::RepeatedPtrField< ::bcdown::hero_dyna >*
      mutable__oppo_dyna_end();

  // repeated uint32 _oprations = 13;
  inline int _oprations_size() const;
  inline void clear__oprations();
  static const int kOprationsFieldNumber = 13;
  inline ::google::protobuf::uint32 _oprations(int index) const;
  inline void set__oprations(int index, ::google::protobuf::uint32 value);
  inline void add__oprations(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      _oprations() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable__oprations();

  // optional uint32 _cli_battle_time = 14;
  inline bool has__cli_battle_time() const;
  inline void clear__cli_battle_time();
  static const int kCliBattleTimeFieldNumber = 14;
  inline ::google::protobuf::uint32 _cli_battle_time() const;
  inline void set__cli_battle_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:bcdown.excav_check_msg)
 private:
  inline void set_has__checkid();
  inline void clear_has__checkid();
  inline void set_has__userid();
  inline void clear_has__userid();
  inline void set_has__oppo_userid();
  inline void clear_has__oppo_userid();
  inline void set_has__oppo_type();
  inline void clear_has__oppo_type();
  inline void set_has__result();
  inline void clear_has__result();
  inline void set_has__rseed();
  inline void clear_has__rseed();
  inline void set_has__cli_battle_time();
  inline void clear_has__cli_battle_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _checkid_;
  ::google::protobuf::uint32 _userid_;
  ::google::protobuf::uint32 _oppo_userid_;
  int _oppo_type_;
  ::google::protobuf::RepeatedPtrField< ::bcdown::hero > _self_heroes_;
  int _result_;
  ::google::protobuf::uint32 _rseed_;
  ::google::protobuf::RepeatedPtrField< ::bcdown::hero > _oppo_heroes_;
  ::google::protobuf::RepeatedPtrField< ::bcdown::hero_dyna > _self_dyna_start_;
  ::google::protobuf::RepeatedPtrField< ::bcdown::hero_dyna > _self_dyna_end_;
  ::google::protobuf::RepeatedPtrField< ::bcdown::hero_dyna > _oppo_dyna_start_;
  ::google::protobuf::RepeatedPtrField< ::bcdown::hero_dyna > _oppo_dyna_end_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > _oprations_;
  ::google::protobuf::uint32 _cli_battle_time_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(14 + 31) / 32];

  friend void  protobuf_AddDesc_bcdown_2eproto();
  friend void protobuf_AssignDesc_bcdown_2eproto();
  friend void protobuf_ShutdownFile_bcdown_2eproto();

  void InitAsDefaultInstance();
  static excav_check_msg* default_instance_;
};
// -------------------------------------------------------------------

class hero_equip : public ::google::protobuf::Message {
 public:
  hero_equip();
  virtual ~hero_equip();

  hero_equip(const hero_equip& from);

  inline hero_equip& operator=(const hero_equip& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const hero_equip& default_instance();

  void Swap(hero_equip* other);

  // implements Message ----------------------------------------------

  hero_equip* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const hero_equip& from);
  void MergeFrom(const hero_equip& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _index = 1;
  inline bool has__index() const;
  inline void clear__index();
  static const int kIndexFieldNumber = 1;
  inline ::google::protobuf::uint32 _index() const;
  inline void set__index(::google::protobuf::uint32 value);

  // required uint32 _item_id = 2;
  inline bool has__item_id() const;
  inline void clear__item_id();
  static const int kItemIdFieldNumber = 2;
  inline ::google::protobuf::uint32 _item_id() const;
  inline void set__item_id(::google::protobuf::uint32 value);

  // required uint32 _exp = 3;
  inline bool has__exp() const;
  inline void clear__exp();
  static const int kExpFieldNumber = 3;
  inline ::google::protobuf::uint32 _exp() const;
  inline void set__exp(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:bcdown.hero_equip)
 private:
  inline void set_has__index();
  inline void clear_has__index();
  inline void set_has__item_id();
  inline void clear_has__item_id();
  inline void set_has__exp();
  inline void clear_has__exp();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _index_;
  ::google::protobuf::uint32 _item_id_;
  ::google::protobuf::uint32 _exp_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_bcdown_2eproto();
  friend void protobuf_AssignDesc_bcdown_2eproto();
  friend void protobuf_ShutdownFile_bcdown_2eproto();

  void InitAsDefaultInstance();
  static hero_equip* default_instance_;
};
// -------------------------------------------------------------------

class hero : public ::google::protobuf::Message {
 public:
  hero();
  virtual ~hero();

  hero(const hero& from);

  inline hero& operator=(const hero& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const hero& default_instance();

  void Swap(hero* other);

  // implements Message ----------------------------------------------

  hero* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const hero& from);
  void MergeFrom(const hero& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef hero_status status;
  static const status idle = hero_status_idle;
  static const status hire = hero_status_hire;
  static const status mining = hero_status_mining;
  static inline bool status_IsValid(int value) {
    return hero_status_IsValid(value);
  }
  static const status status_MIN =
    hero_status_status_MIN;
  static const status status_MAX =
    hero_status_status_MAX;
  static const int status_ARRAYSIZE =
    hero_status_status_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  status_descriptor() {
    return hero_status_descriptor();
  }
  static inline const ::std::string& status_Name(status value) {
    return hero_status_Name(value);
  }
  static inline bool status_Parse(const ::std::string& name,
      status* value) {
    return hero_status_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required uint32 _tid = 1;
  inline bool has__tid() const;
  inline void clear__tid();
  static const int kTidFieldNumber = 1;
  inline ::google::protobuf::uint32 _tid() const;
  inline void set__tid(::google::protobuf::uint32 value);

  // optional uint32 _rank = 2;
  inline bool has__rank() const;
  inline void clear__rank();
  static const int kRankFieldNumber = 2;
  inline ::google::protobuf::uint32 _rank() const;
  inline void set__rank(::google::protobuf::uint32 value);

  // required uint32 _level = 3;
  inline bool has__level() const;
  inline void clear__level();
  static const int kLevelFieldNumber = 3;
  inline ::google::protobuf::uint32 _level() const;
  inline void set__level(::google::protobuf::uint32 value);

  // required uint32 _stars = 4;
  inline bool has__stars() const;
  inline void clear__stars();
  static const int kStarsFieldNumber = 4;
  inline ::google::protobuf::uint32 _stars() const;
  inline void set__stars(::google::protobuf::uint32 value);

  // required uint32 _exp = 5;
  inline bool has__exp() const;
  inline void clear__exp();
  static const int kExpFieldNumber = 5;
  inline ::google::protobuf::uint32 _exp() const;
  inline void set__exp(::google::protobuf::uint32 value);

  // required uint32 _gs = 6;
  inline bool has__gs() const;
  inline void clear__gs();
  static const int kGsFieldNumber = 6;
  inline ::google::protobuf::uint32 _gs() const;
  inline void set__gs(::google::protobuf::uint32 value);

  // required .bcdown.hero.status _state = 7;
  inline bool has__state() const;
  inline void clear__state();
  static const int kStateFieldNumber = 7;
  inline ::bcdown::hero_status _state() const;
  inline void set__state(::bcdown::hero_status value);

  // repeated uint32 _skill_levels = 8;
  inline int _skill_levels_size() const;
  inline void clear__skill_levels();
  static const int kSkillLevelsFieldNumber = 8;
  inline ::google::protobuf::uint32 _skill_levels(int index) const;
  inline void set__skill_levels(int index, ::google::protobuf::uint32 value);
  inline void add__skill_levels(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      _skill_levels() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable__skill_levels();

  // repeated .bcdown.hero_equip _items = 9;
  inline int _items_size() const;
  inline void clear__items();
  static const int kItemsFieldNumber = 9;
  inline const ::bcdown::hero_equip& _items(int index) const;
  inline ::bcdown::hero_equip* mutable__items(int index);
  inline ::bcdown::hero_equip* add__items();
  inline const ::google::protobuf::RepeatedPtrField< ::bcdown::hero_equip >&
      _items() const;
  inline ::google::protobuf::RepeatedPtrField< ::bcdown::hero_equip >*
      mutable__items();

  // @@protoc_insertion_point(class_scope:bcdown.hero)
 private:
  inline void set_has__tid();
  inline void clear_has__tid();
  inline void set_has__rank();
  inline void clear_has__rank();
  inline void set_has__level();
  inline void clear_has__level();
  inline void set_has__stars();
  inline void clear_has__stars();
  inline void set_has__exp();
  inline void clear_has__exp();
  inline void set_has__gs();
  inline void clear_has__gs();
  inline void set_has__state();
  inline void clear_has__state();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _tid_;
  ::google::protobuf::uint32 _rank_;
  ::google::protobuf::uint32 _level_;
  ::google::protobuf::uint32 _stars_;
  ::google::protobuf::uint32 _exp_;
  ::google::protobuf::uint32 _gs_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > _skill_levels_;
  ::google::protobuf::RepeatedPtrField< ::bcdown::hero_equip > _items_;
  int _state_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];

  friend void  protobuf_AddDesc_bcdown_2eproto();
  friend void protobuf_AssignDesc_bcdown_2eproto();
  friend void protobuf_ShutdownFile_bcdown_2eproto();

  void InitAsDefaultInstance();
  static hero* default_instance_;
};
// -------------------------------------------------------------------

class hero_dyna : public ::google::protobuf::Message {
 public:
  hero_dyna();
  virtual ~hero_dyna();

  hero_dyna(const hero_dyna& from);

  inline hero_dyna& operator=(const hero_dyna& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const hero_dyna& default_instance();

  void Swap(hero_dyna* other);

  // implements Message ----------------------------------------------

  hero_dyna* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const hero_dyna& from);
  void MergeFrom(const hero_dyna& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 _hp_perc = 1;
  inline bool has__hp_perc() const;
  inline void clear__hp_perc();
  static const int kHpPercFieldNumber = 1;
  inline ::google::protobuf::uint32 _hp_perc() const;
  inline void set__hp_perc(::google::protobuf::uint32 value);

  // required uint32 _mp_perc = 2;
  inline bool has__mp_perc() const;
  inline void clear__mp_perc();
  static const int kMpPercFieldNumber = 2;
  inline ::google::protobuf::uint32 _mp_perc() const;
  inline void set__mp_perc(::google::protobuf::uint32 value);

  // optional uint32 _custom_data = 3;
  inline bool has__custom_data() const;
  inline void clear__custom_data();
  static const int kCustomDataFieldNumber = 3;
  inline ::google::protobuf::uint32 _custom_data() const;
  inline void set__custom_data(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:bcdown.hero_dyna)
 private:
  inline void set_has__hp_perc();
  inline void clear_has__hp_perc();
  inline void set_has__mp_perc();
  inline void clear_has__mp_perc();
  inline void set_has__custom_data();
  inline void clear_has__custom_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _hp_perc_;
  ::google::protobuf::uint32 _mp_perc_;
  ::google::protobuf::uint32 _custom_data_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_bcdown_2eproto();
  friend void protobuf_AssignDesc_bcdown_2eproto();
  friend void protobuf_ShutdownFile_bcdown_2eproto();

  void InitAsDefaultInstance();
  static hero_dyna* default_instance_;
};
// ===================================================================


// ===================================================================

// battlecheck

// repeated .bcdown.pve_check_msg _pve_msg = 1;
inline int battlecheck::_pve_msg_size() const {
  return _pve_msg_.size();
}
inline void battlecheck::clear__pve_msg() {
  _pve_msg_.Clear();
}
inline const ::bcdown::pve_check_msg& battlecheck::_pve_msg(int index) const {
  return _pve_msg_.Get(index);
}
inline ::bcdown::pve_check_msg* battlecheck::mutable__pve_msg(int index) {
  return _pve_msg_.Mutable(index);
}
inline ::bcdown::pve_check_msg* battlecheck::add__pve_msg() {
  return _pve_msg_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bcdown::pve_check_msg >&
battlecheck::_pve_msg() const {
  return _pve_msg_;
}
inline ::google::protobuf::RepeatedPtrField< ::bcdown::pve_check_msg >*
battlecheck::mutable__pve_msg() {
  return &_pve_msg_;
}

// repeated .bcdown.pvp_check_msg _pvp_msg = 2;
inline int battlecheck::_pvp_msg_size() const {
  return _pvp_msg_.size();
}
inline void battlecheck::clear__pvp_msg() {
  _pvp_msg_.Clear();
}
inline const ::bcdown::pvp_check_msg& battlecheck::_pvp_msg(int index) const {
  return _pvp_msg_.Get(index);
}
inline ::bcdown::pvp_check_msg* battlecheck::mutable__pvp_msg(int index) {
  return _pvp_msg_.Mutable(index);
}
inline ::bcdown::pvp_check_msg* battlecheck::add__pvp_msg() {
  return _pvp_msg_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bcdown::pvp_check_msg >&
battlecheck::_pvp_msg() const {
  return _pvp_msg_;
}
inline ::google::protobuf::RepeatedPtrField< ::bcdown::pvp_check_msg >*
battlecheck::mutable__pvp_msg() {
  return &_pvp_msg_;
}

// repeated .bcdown.tbc_check_msg _tbc_msg = 3;
inline int battlecheck::_tbc_msg_size() const {
  return _tbc_msg_.size();
}
inline void battlecheck::clear__tbc_msg() {
  _tbc_msg_.Clear();
}
inline const ::bcdown::tbc_check_msg& battlecheck::_tbc_msg(int index) const {
  return _tbc_msg_.Get(index);
}
inline ::bcdown::tbc_check_msg* battlecheck::mutable__tbc_msg(int index) {
  return _tbc_msg_.Mutable(index);
}
inline ::bcdown::tbc_check_msg* battlecheck::add__tbc_msg() {
  return _tbc_msg_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bcdown::tbc_check_msg >&
battlecheck::_tbc_msg() const {
  return _tbc_msg_;
}
inline ::google::protobuf::RepeatedPtrField< ::bcdown::tbc_check_msg >*
battlecheck::mutable__tbc_msg() {
  return &_tbc_msg_;
}

// repeated .bcdown.excav_check_msg _excav_msg = 4;
inline int battlecheck::_excav_msg_size() const {
  return _excav_msg_.size();
}
inline void battlecheck::clear__excav_msg() {
  _excav_msg_.Clear();
}
inline const ::bcdown::excav_check_msg& battlecheck::_excav_msg(int index) const {
  return _excav_msg_.Get(index);
}
inline ::bcdown::excav_check_msg* battlecheck::mutable__excav_msg(int index) {
  return _excav_msg_.Mutable(index);
}
inline ::bcdown::excav_check_msg* battlecheck::add__excav_msg() {
  return _excav_msg_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bcdown::excav_check_msg >&
battlecheck::_excav_msg() const {
  return _excav_msg_;
}
inline ::google::protobuf::RepeatedPtrField< ::bcdown::excav_check_msg >*
battlecheck::mutable__excav_msg() {
  return &_excav_msg_;
}

// -------------------------------------------------------------------

// pve_check_msg

// required uint32 _checkid = 1;
inline bool pve_check_msg::has__checkid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void pve_check_msg::set_has__checkid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void pve_check_msg::clear_has__checkid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void pve_check_msg::clear__checkid() {
  _checkid_ = 0u;
  clear_has__checkid();
}
inline ::google::protobuf::uint32 pve_check_msg::_checkid() const {
  return _checkid_;
}
inline void pve_check_msg::set__checkid(::google::protobuf::uint32 value) {
  set_has__checkid();
  _checkid_ = value;
}

// required uint32 _userid = 2;
inline bool pve_check_msg::has__userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void pve_check_msg::set_has__userid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void pve_check_msg::clear_has__userid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void pve_check_msg::clear__userid() {
  _userid_ = 0u;
  clear_has__userid();
}
inline ::google::protobuf::uint32 pve_check_msg::_userid() const {
  return _userid_;
}
inline void pve_check_msg::set__userid(::google::protobuf::uint32 value) {
  set_has__userid();
  _userid_ = value;
}

// required uint32 _stageid = 3;
inline bool pve_check_msg::has__stageid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void pve_check_msg::set_has__stageid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void pve_check_msg::clear_has__stageid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void pve_check_msg::clear__stageid() {
  _stageid_ = 0u;
  clear_has__stageid();
}
inline ::google::protobuf::uint32 pve_check_msg::_stageid() const {
  return _stageid_;
}
inline void pve_check_msg::set__stageid(::google::protobuf::uint32 value) {
  set_has__stageid();
  _stageid_ = value;
}

// required .bcdown.result _result = 4 [default = victory];
inline bool pve_check_msg::has__result() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void pve_check_msg::set_has__result() {
  _has_bits_[0] |= 0x00000008u;
}
inline void pve_check_msg::clear_has__result() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void pve_check_msg::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::bcdown::result pve_check_msg::_result() const {
  return static_cast< ::bcdown::result >(_result_);
}
inline void pve_check_msg::set__result(::bcdown::result value) {
  assert(::bcdown::result_IsValid(value));
  set_has__result();
  _result_ = value;
}

// required uint32 _stars = 5;
inline bool pve_check_msg::has__stars() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void pve_check_msg::set_has__stars() {
  _has_bits_[0] |= 0x00000010u;
}
inline void pve_check_msg::clear_has__stars() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void pve_check_msg::clear__stars() {
  _stars_ = 0u;
  clear_has__stars();
}
inline ::google::protobuf::uint32 pve_check_msg::_stars() const {
  return _stars_;
}
inline void pve_check_msg::set__stars(::google::protobuf::uint32 value) {
  set_has__stars();
  _stars_ = value;
}

// repeated .bcdown.hero _heroes = 6;
inline int pve_check_msg::_heroes_size() const {
  return _heroes_.size();
}
inline void pve_check_msg::clear__heroes() {
  _heroes_.Clear();
}
inline const ::bcdown::hero& pve_check_msg::_heroes(int index) const {
  return _heroes_.Get(index);
}
inline ::bcdown::hero* pve_check_msg::mutable__heroes(int index) {
  return _heroes_.Mutable(index);
}
inline ::bcdown::hero* pve_check_msg::add__heroes() {
  return _heroes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bcdown::hero >&
pve_check_msg::_heroes() const {
  return _heroes_;
}
inline ::google::protobuf::RepeatedPtrField< ::bcdown::hero >*
pve_check_msg::mutable__heroes() {
  return &_heroes_;
}

// repeated uint32 _oprations = 7;
inline int pve_check_msg::_oprations_size() const {
  return _oprations_.size();
}
inline void pve_check_msg::clear__oprations() {
  _oprations_.Clear();
}
inline ::google::protobuf::uint32 pve_check_msg::_oprations(int index) const {
  return _oprations_.Get(index);
}
inline void pve_check_msg::set__oprations(int index, ::google::protobuf::uint32 value) {
  _oprations_.Set(index, value);
}
inline void pve_check_msg::add__oprations(::google::protobuf::uint32 value) {
  _oprations_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
pve_check_msg::_oprations() const {
  return _oprations_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
pve_check_msg::mutable__oprations() {
  return &_oprations_;
}

// required uint32 _rseed = 8;
inline bool pve_check_msg::has__rseed() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void pve_check_msg::set_has__rseed() {
  _has_bits_[0] |= 0x00000080u;
}
inline void pve_check_msg::clear_has__rseed() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void pve_check_msg::clear__rseed() {
  _rseed_ = 0u;
  clear_has__rseed();
}
inline ::google::protobuf::uint32 pve_check_msg::_rseed() const {
  return _rseed_;
}
inline void pve_check_msg::set__rseed(::google::protobuf::uint32 value) {
  set_has__rseed();
  _rseed_ = value;
}

// optional uint32 _cli_battle_time = 9;
inline bool pve_check_msg::has__cli_battle_time() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void pve_check_msg::set_has__cli_battle_time() {
  _has_bits_[0] |= 0x00000100u;
}
inline void pve_check_msg::clear_has__cli_battle_time() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void pve_check_msg::clear__cli_battle_time() {
  _cli_battle_time_ = 0u;
  clear_has__cli_battle_time();
}
inline ::google::protobuf::uint32 pve_check_msg::_cli_battle_time() const {
  return _cli_battle_time_;
}
inline void pve_check_msg::set__cli_battle_time(::google::protobuf::uint32 value) {
  set_has__cli_battle_time();
  _cli_battle_time_ = value;
}

// -------------------------------------------------------------------

// pvp_check_msg

// required uint32 _checkid = 1;
inline bool pvp_check_msg::has__checkid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void pvp_check_msg::set_has__checkid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void pvp_check_msg::clear_has__checkid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void pvp_check_msg::clear__checkid() {
  _checkid_ = 0u;
  clear_has__checkid();
}
inline ::google::protobuf::uint32 pvp_check_msg::_checkid() const {
  return _checkid_;
}
inline void pvp_check_msg::set__checkid(::google::protobuf::uint32 value) {
  set_has__checkid();
  _checkid_ = value;
}

// required uint32 _userid = 2;
inline bool pvp_check_msg::has__userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void pvp_check_msg::set_has__userid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void pvp_check_msg::clear_has__userid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void pvp_check_msg::clear__userid() {
  _userid_ = 0u;
  clear_has__userid();
}
inline ::google::protobuf::uint32 pvp_check_msg::_userid() const {
  return _userid_;
}
inline void pvp_check_msg::set__userid(::google::protobuf::uint32 value) {
  set_has__userid();
  _userid_ = value;
}

// optional string _username = 3;
inline bool pvp_check_msg::has__username() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void pvp_check_msg::set_has__username() {
  _has_bits_[0] |= 0x00000004u;
}
inline void pvp_check_msg::clear_has__username() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void pvp_check_msg::clear__username() {
  if (_username_ != &::google::protobuf::internal::kEmptyString) {
    _username_->clear();
  }
  clear_has__username();
}
inline const ::std::string& pvp_check_msg::_username() const {
  return *_username_;
}
inline void pvp_check_msg::set__username(const ::std::string& value) {
  set_has__username();
  if (_username_ == &::google::protobuf::internal::kEmptyString) {
    _username_ = new ::std::string;
  }
  _username_->assign(value);
}
inline void pvp_check_msg::set__username(const char* value) {
  set_has__username();
  if (_username_ == &::google::protobuf::internal::kEmptyString) {
    _username_ = new ::std::string;
  }
  _username_->assign(value);
}
inline void pvp_check_msg::set__username(const char* value, size_t size) {
  set_has__username();
  if (_username_ == &::google::protobuf::internal::kEmptyString) {
    _username_ = new ::std::string;
  }
  _username_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* pvp_check_msg::mutable__username() {
  set_has__username();
  if (_username_ == &::google::protobuf::internal::kEmptyString) {
    _username_ = new ::std::string;
  }
  return _username_;
}
inline ::std::string* pvp_check_msg::release__username() {
  clear_has__username();
  if (_username_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = _username_;
    _username_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void pvp_check_msg::set_allocated__username(::std::string* _username) {
  if (_username_ != &::google::protobuf::internal::kEmptyString) {
    delete _username_;
  }
  if (_username) {
    set_has__username();
    _username_ = _username;
  } else {
    clear_has__username();
    _username_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 _level = 4;
inline bool pvp_check_msg::has__level() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void pvp_check_msg::set_has__level() {
  _has_bits_[0] |= 0x00000008u;
}
inline void pvp_check_msg::clear_has__level() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void pvp_check_msg::clear__level() {
  _level_ = 0u;
  clear_has__level();
}
inline ::google::protobuf::uint32 pvp_check_msg::_level() const {
  return _level_;
}
inline void pvp_check_msg::set__level(::google::protobuf::uint32 value) {
  set_has__level();
  _level_ = value;
}

// optional uint32 _avatar = 5;
inline bool pvp_check_msg::has__avatar() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void pvp_check_msg::set_has__avatar() {
  _has_bits_[0] |= 0x00000010u;
}
inline void pvp_check_msg::clear_has__avatar() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void pvp_check_msg::clear__avatar() {
  _avatar_ = 0u;
  clear_has__avatar();
}
inline ::google::protobuf::uint32 pvp_check_msg::_avatar() const {
  return _avatar_;
}
inline void pvp_check_msg::set__avatar(::google::protobuf::uint32 value) {
  set_has__avatar();
  _avatar_ = value;
}

// required uint32 _oppo_userid = 6;
inline bool pvp_check_msg::has__oppo_userid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void pvp_check_msg::set_has__oppo_userid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void pvp_check_msg::clear_has__oppo_userid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void pvp_check_msg::clear__oppo_userid() {
  _oppo_userid_ = 0u;
  clear_has__oppo_userid();
}
inline ::google::protobuf::uint32 pvp_check_msg::_oppo_userid() const {
  return _oppo_userid_;
}
inline void pvp_check_msg::set__oppo_userid(::google::protobuf::uint32 value) {
  set_has__oppo_userid();
  _oppo_userid_ = value;
}

// optional string _oppo_name = 7;
inline bool pvp_check_msg::has__oppo_name() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void pvp_check_msg::set_has__oppo_name() {
  _has_bits_[0] |= 0x00000040u;
}
inline void pvp_check_msg::clear_has__oppo_name() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void pvp_check_msg::clear__oppo_name() {
  if (_oppo_name_ != &::google::protobuf::internal::kEmptyString) {
    _oppo_name_->clear();
  }
  clear_has__oppo_name();
}
inline const ::std::string& pvp_check_msg::_oppo_name() const {
  return *_oppo_name_;
}
inline void pvp_check_msg::set__oppo_name(const ::std::string& value) {
  set_has__oppo_name();
  if (_oppo_name_ == &::google::protobuf::internal::kEmptyString) {
    _oppo_name_ = new ::std::string;
  }
  _oppo_name_->assign(value);
}
inline void pvp_check_msg::set__oppo_name(const char* value) {
  set_has__oppo_name();
  if (_oppo_name_ == &::google::protobuf::internal::kEmptyString) {
    _oppo_name_ = new ::std::string;
  }
  _oppo_name_->assign(value);
}
inline void pvp_check_msg::set__oppo_name(const char* value, size_t size) {
  set_has__oppo_name();
  if (_oppo_name_ == &::google::protobuf::internal::kEmptyString) {
    _oppo_name_ = new ::std::string;
  }
  _oppo_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* pvp_check_msg::mutable__oppo_name() {
  set_has__oppo_name();
  if (_oppo_name_ == &::google::protobuf::internal::kEmptyString) {
    _oppo_name_ = new ::std::string;
  }
  return _oppo_name_;
}
inline ::std::string* pvp_check_msg::release__oppo_name() {
  clear_has__oppo_name();
  if (_oppo_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = _oppo_name_;
    _oppo_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void pvp_check_msg::set_allocated__oppo_name(::std::string* _oppo_name) {
  if (_oppo_name_ != &::google::protobuf::internal::kEmptyString) {
    delete _oppo_name_;
  }
  if (_oppo_name) {
    set_has__oppo_name();
    _oppo_name_ = _oppo_name;
  } else {
    clear_has__oppo_name();
    _oppo_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 _oppo_level = 8;
inline bool pvp_check_msg::has__oppo_level() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void pvp_check_msg::set_has__oppo_level() {
  _has_bits_[0] |= 0x00000080u;
}
inline void pvp_check_msg::clear_has__oppo_level() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void pvp_check_msg::clear__oppo_level() {
  _oppo_level_ = 0u;
  clear_has__oppo_level();
}
inline ::google::protobuf::uint32 pvp_check_msg::_oppo_level() const {
  return _oppo_level_;
}
inline void pvp_check_msg::set__oppo_level(::google::protobuf::uint32 value) {
  set_has__oppo_level();
  _oppo_level_ = value;
}

// optional uint32 _oppo_avatar = 9;
inline bool pvp_check_msg::has__oppo_avatar() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void pvp_check_msg::set_has__oppo_avatar() {
  _has_bits_[0] |= 0x00000100u;
}
inline void pvp_check_msg::clear_has__oppo_avatar() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void pvp_check_msg::clear__oppo_avatar() {
  _oppo_avatar_ = 0u;
  clear_has__oppo_avatar();
}
inline ::google::protobuf::uint32 pvp_check_msg::_oppo_avatar() const {
  return _oppo_avatar_;
}
inline void pvp_check_msg::set__oppo_avatar(::google::protobuf::uint32 value) {
  set_has__oppo_avatar();
  _oppo_avatar_ = value;
}

// optional uint32 _oppo_robot = 10;
inline bool pvp_check_msg::has__oppo_robot() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void pvp_check_msg::set_has__oppo_robot() {
  _has_bits_[0] |= 0x00000200u;
}
inline void pvp_check_msg::clear_has__oppo_robot() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void pvp_check_msg::clear__oppo_robot() {
  _oppo_robot_ = 0u;
  clear_has__oppo_robot();
}
inline ::google::protobuf::uint32 pvp_check_msg::_oppo_robot() const {
  return _oppo_robot_;
}
inline void pvp_check_msg::set__oppo_robot(::google::protobuf::uint32 value) {
  set_has__oppo_robot();
  _oppo_robot_ = value;
}

// optional .bcdown.result _result = 11 [default = victory];
inline bool pvp_check_msg::has__result() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void pvp_check_msg::set_has__result() {
  _has_bits_[0] |= 0x00000400u;
}
inline void pvp_check_msg::clear_has__result() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void pvp_check_msg::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::bcdown::result pvp_check_msg::_result() const {
  return static_cast< ::bcdown::result >(_result_);
}
inline void pvp_check_msg::set__result(::bcdown::result value) {
  assert(::bcdown::result_IsValid(value));
  set_has__result();
  _result_ = value;
}

// repeated .bcdown.hero _self_heroes = 12;
inline int pvp_check_msg::_self_heroes_size() const {
  return _self_heroes_.size();
}
inline void pvp_check_msg::clear__self_heroes() {
  _self_heroes_.Clear();
}
inline const ::bcdown::hero& pvp_check_msg::_self_heroes(int index) const {
  return _self_heroes_.Get(index);
}
inline ::bcdown::hero* pvp_check_msg::mutable__self_heroes(int index) {
  return _self_heroes_.Mutable(index);
}
inline ::bcdown::hero* pvp_check_msg::add__self_heroes() {
  return _self_heroes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bcdown::hero >&
pvp_check_msg::_self_heroes() const {
  return _self_heroes_;
}
inline ::google::protobuf::RepeatedPtrField< ::bcdown::hero >*
pvp_check_msg::mutable__self_heroes() {
  return &_self_heroes_;
}

// repeated .bcdown.hero _oppo_heroes = 13;
inline int pvp_check_msg::_oppo_heroes_size() const {
  return _oppo_heroes_.size();
}
inline void pvp_check_msg::clear__oppo_heroes() {
  _oppo_heroes_.Clear();
}
inline const ::bcdown::hero& pvp_check_msg::_oppo_heroes(int index) const {
  return _oppo_heroes_.Get(index);
}
inline ::bcdown::hero* pvp_check_msg::mutable__oppo_heroes(int index) {
  return _oppo_heroes_.Mutable(index);
}
inline ::bcdown::hero* pvp_check_msg::add__oppo_heroes() {
  return _oppo_heroes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bcdown::hero >&
pvp_check_msg::_oppo_heroes() const {
  return _oppo_heroes_;
}
inline ::google::protobuf::RepeatedPtrField< ::bcdown::hero >*
pvp_check_msg::mutable__oppo_heroes() {
  return &_oppo_heroes_;
}

// required uint32 _rseed = 14;
inline bool pvp_check_msg::has__rseed() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void pvp_check_msg::set_has__rseed() {
  _has_bits_[0] |= 0x00002000u;
}
inline void pvp_check_msg::clear_has__rseed() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void pvp_check_msg::clear__rseed() {
  _rseed_ = 0u;
  clear_has__rseed();
}
inline ::google::protobuf::uint32 pvp_check_msg::_rseed() const {
  return _rseed_;
}
inline void pvp_check_msg::set__rseed(::google::protobuf::uint32 value) {
  set_has__rseed();
  _rseed_ = value;
}

// optional uint32 _self_robot = 15;
inline bool pvp_check_msg::has__self_robot() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void pvp_check_msg::set_has__self_robot() {
  _has_bits_[0] |= 0x00004000u;
}
inline void pvp_check_msg::clear_has__self_robot() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void pvp_check_msg::clear__self_robot() {
  _self_robot_ = 0u;
  clear_has__self_robot();
}
inline ::google::protobuf::uint32 pvp_check_msg::_self_robot() const {
  return _self_robot_;
}
inline void pvp_check_msg::set__self_robot(::google::protobuf::uint32 value) {
  set_has__self_robot();
  _self_robot_ = value;
}

// -------------------------------------------------------------------

// tbc_check_msg

// required uint32 _checkid = 1;
inline bool tbc_check_msg::has__checkid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void tbc_check_msg::set_has__checkid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void tbc_check_msg::clear_has__checkid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void tbc_check_msg::clear__checkid() {
  _checkid_ = 0u;
  clear_has__checkid();
}
inline ::google::protobuf::uint32 tbc_check_msg::_checkid() const {
  return _checkid_;
}
inline void tbc_check_msg::set__checkid(::google::protobuf::uint32 value) {
  set_has__checkid();
  _checkid_ = value;
}

// required uint32 _userid = 2;
inline bool tbc_check_msg::has__userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void tbc_check_msg::set_has__userid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void tbc_check_msg::clear_has__userid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void tbc_check_msg::clear__userid() {
  _userid_ = 0u;
  clear_has__userid();
}
inline ::google::protobuf::uint32 tbc_check_msg::_userid() const {
  return _userid_;
}
inline void tbc_check_msg::set__userid(::google::protobuf::uint32 value) {
  set_has__userid();
  _userid_ = value;
}

// optional string _username = 3;
inline bool tbc_check_msg::has__username() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void tbc_check_msg::set_has__username() {
  _has_bits_[0] |= 0x00000004u;
}
inline void tbc_check_msg::clear_has__username() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void tbc_check_msg::clear__username() {
  if (_username_ != &::google::protobuf::internal::kEmptyString) {
    _username_->clear();
  }
  clear_has__username();
}
inline const ::std::string& tbc_check_msg::_username() const {
  return *_username_;
}
inline void tbc_check_msg::set__username(const ::std::string& value) {
  set_has__username();
  if (_username_ == &::google::protobuf::internal::kEmptyString) {
    _username_ = new ::std::string;
  }
  _username_->assign(value);
}
inline void tbc_check_msg::set__username(const char* value) {
  set_has__username();
  if (_username_ == &::google::protobuf::internal::kEmptyString) {
    _username_ = new ::std::string;
  }
  _username_->assign(value);
}
inline void tbc_check_msg::set__username(const char* value, size_t size) {
  set_has__username();
  if (_username_ == &::google::protobuf::internal::kEmptyString) {
    _username_ = new ::std::string;
  }
  _username_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* tbc_check_msg::mutable__username() {
  set_has__username();
  if (_username_ == &::google::protobuf::internal::kEmptyString) {
    _username_ = new ::std::string;
  }
  return _username_;
}
inline ::std::string* tbc_check_msg::release__username() {
  clear_has__username();
  if (_username_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = _username_;
    _username_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void tbc_check_msg::set_allocated__username(::std::string* _username) {
  if (_username_ != &::google::protobuf::internal::kEmptyString) {
    delete _username_;
  }
  if (_username) {
    set_has__username();
    _username_ = _username;
  } else {
    clear_has__username();
    _username_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required uint32 _oppo_userid = 4;
inline bool tbc_check_msg::has__oppo_userid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void tbc_check_msg::set_has__oppo_userid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void tbc_check_msg::clear_has__oppo_userid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void tbc_check_msg::clear__oppo_userid() {
  _oppo_userid_ = 0u;
  clear_has__oppo_userid();
}
inline ::google::protobuf::uint32 tbc_check_msg::_oppo_userid() const {
  return _oppo_userid_;
}
inline void tbc_check_msg::set__oppo_userid(::google::protobuf::uint32 value) {
  set_has__oppo_userid();
  _oppo_userid_ = value;
}

// optional string _oppo_name = 5;
inline bool tbc_check_msg::has__oppo_name() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void tbc_check_msg::set_has__oppo_name() {
  _has_bits_[0] |= 0x00000010u;
}
inline void tbc_check_msg::clear_has__oppo_name() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void tbc_check_msg::clear__oppo_name() {
  if (_oppo_name_ != &::google::protobuf::internal::kEmptyString) {
    _oppo_name_->clear();
  }
  clear_has__oppo_name();
}
inline const ::std::string& tbc_check_msg::_oppo_name() const {
  return *_oppo_name_;
}
inline void tbc_check_msg::set__oppo_name(const ::std::string& value) {
  set_has__oppo_name();
  if (_oppo_name_ == &::google::protobuf::internal::kEmptyString) {
    _oppo_name_ = new ::std::string;
  }
  _oppo_name_->assign(value);
}
inline void tbc_check_msg::set__oppo_name(const char* value) {
  set_has__oppo_name();
  if (_oppo_name_ == &::google::protobuf::internal::kEmptyString) {
    _oppo_name_ = new ::std::string;
  }
  _oppo_name_->assign(value);
}
inline void tbc_check_msg::set__oppo_name(const char* value, size_t size) {
  set_has__oppo_name();
  if (_oppo_name_ == &::google::protobuf::internal::kEmptyString) {
    _oppo_name_ = new ::std::string;
  }
  _oppo_name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* tbc_check_msg::mutable__oppo_name() {
  set_has__oppo_name();
  if (_oppo_name_ == &::google::protobuf::internal::kEmptyString) {
    _oppo_name_ = new ::std::string;
  }
  return _oppo_name_;
}
inline ::std::string* tbc_check_msg::release__oppo_name() {
  clear_has__oppo_name();
  if (_oppo_name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = _oppo_name_;
    _oppo_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void tbc_check_msg::set_allocated__oppo_name(::std::string* _oppo_name) {
  if (_oppo_name_ != &::google::protobuf::internal::kEmptyString) {
    delete _oppo_name_;
  }
  if (_oppo_name) {
    set_has__oppo_name();
    _oppo_name_ = _oppo_name;
  } else {
    clear_has__oppo_name();
    _oppo_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional uint32 _oppo_robot = 6;
inline bool tbc_check_msg::has__oppo_robot() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void tbc_check_msg::set_has__oppo_robot() {
  _has_bits_[0] |= 0x00000020u;
}
inline void tbc_check_msg::clear_has__oppo_robot() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void tbc_check_msg::clear__oppo_robot() {
  _oppo_robot_ = 0u;
  clear_has__oppo_robot();
}
inline ::google::protobuf::uint32 tbc_check_msg::_oppo_robot() const {
  return _oppo_robot_;
}
inline void tbc_check_msg::set__oppo_robot(::google::protobuf::uint32 value) {
  set_has__oppo_robot();
  _oppo_robot_ = value;
}

// optional .bcdown.result _result = 7 [default = victory];
inline bool tbc_check_msg::has__result() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void tbc_check_msg::set_has__result() {
  _has_bits_[0] |= 0x00000040u;
}
inline void tbc_check_msg::clear_has__result() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void tbc_check_msg::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::bcdown::result tbc_check_msg::_result() const {
  return static_cast< ::bcdown::result >(_result_);
}
inline void tbc_check_msg::set__result(::bcdown::result value) {
  assert(::bcdown::result_IsValid(value));
  set_has__result();
  _result_ = value;
}

// repeated .bcdown.hero _self_heroes = 8;
inline int tbc_check_msg::_self_heroes_size() const {
  return _self_heroes_.size();
}
inline void tbc_check_msg::clear__self_heroes() {
  _self_heroes_.Clear();
}
inline const ::bcdown::hero& tbc_check_msg::_self_heroes(int index) const {
  return _self_heroes_.Get(index);
}
inline ::bcdown::hero* tbc_check_msg::mutable__self_heroes(int index) {
  return _self_heroes_.Mutable(index);
}
inline ::bcdown::hero* tbc_check_msg::add__self_heroes() {
  return _self_heroes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bcdown::hero >&
tbc_check_msg::_self_heroes() const {
  return _self_heroes_;
}
inline ::google::protobuf::RepeatedPtrField< ::bcdown::hero >*
tbc_check_msg::mutable__self_heroes() {
  return &_self_heroes_;
}

// repeated .bcdown.hero _oppo_heroes = 9;
inline int tbc_check_msg::_oppo_heroes_size() const {
  return _oppo_heroes_.size();
}
inline void tbc_check_msg::clear__oppo_heroes() {
  _oppo_heroes_.Clear();
}
inline const ::bcdown::hero& tbc_check_msg::_oppo_heroes(int index) const {
  return _oppo_heroes_.Get(index);
}
inline ::bcdown::hero* tbc_check_msg::mutable__oppo_heroes(int index) {
  return _oppo_heroes_.Mutable(index);
}
inline ::bcdown::hero* tbc_check_msg::add__oppo_heroes() {
  return _oppo_heroes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bcdown::hero >&
tbc_check_msg::_oppo_heroes() const {
  return _oppo_heroes_;
}
inline ::google::protobuf::RepeatedPtrField< ::bcdown::hero >*
tbc_check_msg::mutable__oppo_heroes() {
  return &_oppo_heroes_;
}

// required uint32 _rseed = 10;
inline bool tbc_check_msg::has__rseed() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void tbc_check_msg::set_has__rseed() {
  _has_bits_[0] |= 0x00000200u;
}
inline void tbc_check_msg::clear_has__rseed() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void tbc_check_msg::clear__rseed() {
  _rseed_ = 0u;
  clear_has__rseed();
}
inline ::google::protobuf::uint32 tbc_check_msg::_rseed() const {
  return _rseed_;
}
inline void tbc_check_msg::set__rseed(::google::protobuf::uint32 value) {
  set_has__rseed();
  _rseed_ = value;
}

// optional uint32 _self_robot = 11;
inline bool tbc_check_msg::has__self_robot() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void tbc_check_msg::set_has__self_robot() {
  _has_bits_[0] |= 0x00000400u;
}
inline void tbc_check_msg::clear_has__self_robot() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void tbc_check_msg::clear__self_robot() {
  _self_robot_ = 0u;
  clear_has__self_robot();
}
inline ::google::protobuf::uint32 tbc_check_msg::_self_robot() const {
  return _self_robot_;
}
inline void tbc_check_msg::set__self_robot(::google::protobuf::uint32 value) {
  set_has__self_robot();
  _self_robot_ = value;
}

// repeated .bcdown.hero_dyna _self_dyna_start = 12;
inline int tbc_check_msg::_self_dyna_start_size() const {
  return _self_dyna_start_.size();
}
inline void tbc_check_msg::clear__self_dyna_start() {
  _self_dyna_start_.Clear();
}
inline const ::bcdown::hero_dyna& tbc_check_msg::_self_dyna_start(int index) const {
  return _self_dyna_start_.Get(index);
}
inline ::bcdown::hero_dyna* tbc_check_msg::mutable__self_dyna_start(int index) {
  return _self_dyna_start_.Mutable(index);
}
inline ::bcdown::hero_dyna* tbc_check_msg::add__self_dyna_start() {
  return _self_dyna_start_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bcdown::hero_dyna >&
tbc_check_msg::_self_dyna_start() const {
  return _self_dyna_start_;
}
inline ::google::protobuf::RepeatedPtrField< ::bcdown::hero_dyna >*
tbc_check_msg::mutable__self_dyna_start() {
  return &_self_dyna_start_;
}

// repeated .bcdown.hero_dyna _self_dyna_end = 13;
inline int tbc_check_msg::_self_dyna_end_size() const {
  return _self_dyna_end_.size();
}
inline void tbc_check_msg::clear__self_dyna_end() {
  _self_dyna_end_.Clear();
}
inline const ::bcdown::hero_dyna& tbc_check_msg::_self_dyna_end(int index) const {
  return _self_dyna_end_.Get(index);
}
inline ::bcdown::hero_dyna* tbc_check_msg::mutable__self_dyna_end(int index) {
  return _self_dyna_end_.Mutable(index);
}
inline ::bcdown::hero_dyna* tbc_check_msg::add__self_dyna_end() {
  return _self_dyna_end_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bcdown::hero_dyna >&
tbc_check_msg::_self_dyna_end() const {
  return _self_dyna_end_;
}
inline ::google::protobuf::RepeatedPtrField< ::bcdown::hero_dyna >*
tbc_check_msg::mutable__self_dyna_end() {
  return &_self_dyna_end_;
}

// repeated .bcdown.hero_dyna _oppo_dyna_start = 14;
inline int tbc_check_msg::_oppo_dyna_start_size() const {
  return _oppo_dyna_start_.size();
}
inline void tbc_check_msg::clear__oppo_dyna_start() {
  _oppo_dyna_start_.Clear();
}
inline const ::bcdown::hero_dyna& tbc_check_msg::_oppo_dyna_start(int index) const {
  return _oppo_dyna_start_.Get(index);
}
inline ::bcdown::hero_dyna* tbc_check_msg::mutable__oppo_dyna_start(int index) {
  return _oppo_dyna_start_.Mutable(index);
}
inline ::bcdown::hero_dyna* tbc_check_msg::add__oppo_dyna_start() {
  return _oppo_dyna_start_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bcdown::hero_dyna >&
tbc_check_msg::_oppo_dyna_start() const {
  return _oppo_dyna_start_;
}
inline ::google::protobuf::RepeatedPtrField< ::bcdown::hero_dyna >*
tbc_check_msg::mutable__oppo_dyna_start() {
  return &_oppo_dyna_start_;
}

// repeated .bcdown.hero_dyna _oppo_dyna_end = 15;
inline int tbc_check_msg::_oppo_dyna_end_size() const {
  return _oppo_dyna_end_.size();
}
inline void tbc_check_msg::clear__oppo_dyna_end() {
  _oppo_dyna_end_.Clear();
}
inline const ::bcdown::hero_dyna& tbc_check_msg::_oppo_dyna_end(int index) const {
  return _oppo_dyna_end_.Get(index);
}
inline ::bcdown::hero_dyna* tbc_check_msg::mutable__oppo_dyna_end(int index) {
  return _oppo_dyna_end_.Mutable(index);
}
inline ::bcdown::hero_dyna* tbc_check_msg::add__oppo_dyna_end() {
  return _oppo_dyna_end_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bcdown::hero_dyna >&
tbc_check_msg::_oppo_dyna_end() const {
  return _oppo_dyna_end_;
}
inline ::google::protobuf::RepeatedPtrField< ::bcdown::hero_dyna >*
tbc_check_msg::mutable__oppo_dyna_end() {
  return &_oppo_dyna_end_;
}

// repeated uint32 _oprations = 16;
inline int tbc_check_msg::_oprations_size() const {
  return _oprations_.size();
}
inline void tbc_check_msg::clear__oprations() {
  _oprations_.Clear();
}
inline ::google::protobuf::uint32 tbc_check_msg::_oprations(int index) const {
  return _oprations_.Get(index);
}
inline void tbc_check_msg::set__oprations(int index, ::google::protobuf::uint32 value) {
  _oprations_.Set(index, value);
}
inline void tbc_check_msg::add__oprations(::google::protobuf::uint32 value) {
  _oprations_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
tbc_check_msg::_oprations() const {
  return _oprations_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
tbc_check_msg::mutable__oprations() {
  return &_oprations_;
}

// optional uint32 _cli_battle_time = 17;
inline bool tbc_check_msg::has__cli_battle_time() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void tbc_check_msg::set_has__cli_battle_time() {
  _has_bits_[0] |= 0x00010000u;
}
inline void tbc_check_msg::clear_has__cli_battle_time() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void tbc_check_msg::clear__cli_battle_time() {
  _cli_battle_time_ = 0u;
  clear_has__cli_battle_time();
}
inline ::google::protobuf::uint32 tbc_check_msg::_cli_battle_time() const {
  return _cli_battle_time_;
}
inline void tbc_check_msg::set__cli_battle_time(::google::protobuf::uint32 value) {
  set_has__cli_battle_time();
  _cli_battle_time_ = value;
}

// -------------------------------------------------------------------

// excav_check_msg

// required uint32 _checkid = 1;
inline bool excav_check_msg::has__checkid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void excav_check_msg::set_has__checkid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void excav_check_msg::clear_has__checkid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void excav_check_msg::clear__checkid() {
  _checkid_ = 0u;
  clear_has__checkid();
}
inline ::google::protobuf::uint32 excav_check_msg::_checkid() const {
  return _checkid_;
}
inline void excav_check_msg::set__checkid(::google::protobuf::uint32 value) {
  set_has__checkid();
  _checkid_ = value;
}

// required uint32 _userid = 2;
inline bool excav_check_msg::has__userid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void excav_check_msg::set_has__userid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void excav_check_msg::clear_has__userid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void excav_check_msg::clear__userid() {
  _userid_ = 0u;
  clear_has__userid();
}
inline ::google::protobuf::uint32 excav_check_msg::_userid() const {
  return _userid_;
}
inline void excav_check_msg::set__userid(::google::protobuf::uint32 value) {
  set_has__userid();
  _userid_ = value;
}

// required uint32 _oppo_userid = 3;
inline bool excav_check_msg::has__oppo_userid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void excav_check_msg::set_has__oppo_userid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void excav_check_msg::clear_has__oppo_userid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void excav_check_msg::clear__oppo_userid() {
  _oppo_userid_ = 0u;
  clear_has__oppo_userid();
}
inline ::google::protobuf::uint32 excav_check_msg::_oppo_userid() const {
  return _oppo_userid_;
}
inline void excav_check_msg::set__oppo_userid(::google::protobuf::uint32 value) {
  set_has__oppo_userid();
  _oppo_userid_ = value;
}

// optional .bcdown.excav_check_msg.oppo_type _oppo_type = 4;
inline bool excav_check_msg::has__oppo_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void excav_check_msg::set_has__oppo_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void excav_check_msg::clear_has__oppo_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void excav_check_msg::clear__oppo_type() {
  _oppo_type_ = 1;
  clear_has__oppo_type();
}
inline ::bcdown::excav_check_msg_oppo_type excav_check_msg::_oppo_type() const {
  return static_cast< ::bcdown::excav_check_msg_oppo_type >(_oppo_type_);
}
inline void excav_check_msg::set__oppo_type(::bcdown::excav_check_msg_oppo_type value) {
  assert(::bcdown::excav_check_msg_oppo_type_IsValid(value));
  set_has__oppo_type();
  _oppo_type_ = value;
}

// optional .bcdown.result _result = 5 [default = victory];
inline bool excav_check_msg::has__result() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void excav_check_msg::set_has__result() {
  _has_bits_[0] |= 0x00000010u;
}
inline void excav_check_msg::clear_has__result() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void excav_check_msg::clear__result() {
  _result_ = 0;
  clear_has__result();
}
inline ::bcdown::result excav_check_msg::_result() const {
  return static_cast< ::bcdown::result >(_result_);
}
inline void excav_check_msg::set__result(::bcdown::result value) {
  assert(::bcdown::result_IsValid(value));
  set_has__result();
  _result_ = value;
}

// repeated .bcdown.hero _self_heroes = 6;
inline int excav_check_msg::_self_heroes_size() const {
  return _self_heroes_.size();
}
inline void excav_check_msg::clear__self_heroes() {
  _self_heroes_.Clear();
}
inline const ::bcdown::hero& excav_check_msg::_self_heroes(int index) const {
  return _self_heroes_.Get(index);
}
inline ::bcdown::hero* excav_check_msg::mutable__self_heroes(int index) {
  return _self_heroes_.Mutable(index);
}
inline ::bcdown::hero* excav_check_msg::add__self_heroes() {
  return _self_heroes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bcdown::hero >&
excav_check_msg::_self_heroes() const {
  return _self_heroes_;
}
inline ::google::protobuf::RepeatedPtrField< ::bcdown::hero >*
excav_check_msg::mutable__self_heroes() {
  return &_self_heroes_;
}

// repeated .bcdown.hero _oppo_heroes = 7;
inline int excav_check_msg::_oppo_heroes_size() const {
  return _oppo_heroes_.size();
}
inline void excav_check_msg::clear__oppo_heroes() {
  _oppo_heroes_.Clear();
}
inline const ::bcdown::hero& excav_check_msg::_oppo_heroes(int index) const {
  return _oppo_heroes_.Get(index);
}
inline ::bcdown::hero* excav_check_msg::mutable__oppo_heroes(int index) {
  return _oppo_heroes_.Mutable(index);
}
inline ::bcdown::hero* excav_check_msg::add__oppo_heroes() {
  return _oppo_heroes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bcdown::hero >&
excav_check_msg::_oppo_heroes() const {
  return _oppo_heroes_;
}
inline ::google::protobuf::RepeatedPtrField< ::bcdown::hero >*
excav_check_msg::mutable__oppo_heroes() {
  return &_oppo_heroes_;
}

// required uint32 _rseed = 8;
inline bool excav_check_msg::has__rseed() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void excav_check_msg::set_has__rseed() {
  _has_bits_[0] |= 0x00000080u;
}
inline void excav_check_msg::clear_has__rseed() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void excav_check_msg::clear__rseed() {
  _rseed_ = 0u;
  clear_has__rseed();
}
inline ::google::protobuf::uint32 excav_check_msg::_rseed() const {
  return _rseed_;
}
inline void excav_check_msg::set__rseed(::google::protobuf::uint32 value) {
  set_has__rseed();
  _rseed_ = value;
}

// repeated .bcdown.hero_dyna _self_dyna_start = 9;
inline int excav_check_msg::_self_dyna_start_size() const {
  return _self_dyna_start_.size();
}
inline void excav_check_msg::clear__self_dyna_start() {
  _self_dyna_start_.Clear();
}
inline const ::bcdown::hero_dyna& excav_check_msg::_self_dyna_start(int index) const {
  return _self_dyna_start_.Get(index);
}
inline ::bcdown::hero_dyna* excav_check_msg::mutable__self_dyna_start(int index) {
  return _self_dyna_start_.Mutable(index);
}
inline ::bcdown::hero_dyna* excav_check_msg::add__self_dyna_start() {
  return _self_dyna_start_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bcdown::hero_dyna >&
excav_check_msg::_self_dyna_start() const {
  return _self_dyna_start_;
}
inline ::google::protobuf::RepeatedPtrField< ::bcdown::hero_dyna >*
excav_check_msg::mutable__self_dyna_start() {
  return &_self_dyna_start_;
}

// repeated .bcdown.hero_dyna _self_dyna_end = 10;
inline int excav_check_msg::_self_dyna_end_size() const {
  return _self_dyna_end_.size();
}
inline void excav_check_msg::clear__self_dyna_end() {
  _self_dyna_end_.Clear();
}
inline const ::bcdown::hero_dyna& excav_check_msg::_self_dyna_end(int index) const {
  return _self_dyna_end_.Get(index);
}
inline ::bcdown::hero_dyna* excav_check_msg::mutable__self_dyna_end(int index) {
  return _self_dyna_end_.Mutable(index);
}
inline ::bcdown::hero_dyna* excav_check_msg::add__self_dyna_end() {
  return _self_dyna_end_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bcdown::hero_dyna >&
excav_check_msg::_self_dyna_end() const {
  return _self_dyna_end_;
}
inline ::google::protobuf::RepeatedPtrField< ::bcdown::hero_dyna >*
excav_check_msg::mutable__self_dyna_end() {
  return &_self_dyna_end_;
}

// repeated .bcdown.hero_dyna _oppo_dyna_start = 11;
inline int excav_check_msg::_oppo_dyna_start_size() const {
  return _oppo_dyna_start_.size();
}
inline void excav_check_msg::clear__oppo_dyna_start() {
  _oppo_dyna_start_.Clear();
}
inline const ::bcdown::hero_dyna& excav_check_msg::_oppo_dyna_start(int index) const {
  return _oppo_dyna_start_.Get(index);
}
inline ::bcdown::hero_dyna* excav_check_msg::mutable__oppo_dyna_start(int index) {
  return _oppo_dyna_start_.Mutable(index);
}
inline ::bcdown::hero_dyna* excav_check_msg::add__oppo_dyna_start() {
  return _oppo_dyna_start_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bcdown::hero_dyna >&
excav_check_msg::_oppo_dyna_start() const {
  return _oppo_dyna_start_;
}
inline ::google::protobuf::RepeatedPtrField< ::bcdown::hero_dyna >*
excav_check_msg::mutable__oppo_dyna_start() {
  return &_oppo_dyna_start_;
}

// repeated .bcdown.hero_dyna _oppo_dyna_end = 12;
inline int excav_check_msg::_oppo_dyna_end_size() const {
  return _oppo_dyna_end_.size();
}
inline void excav_check_msg::clear__oppo_dyna_end() {
  _oppo_dyna_end_.Clear();
}
inline const ::bcdown::hero_dyna& excav_check_msg::_oppo_dyna_end(int index) const {
  return _oppo_dyna_end_.Get(index);
}
inline ::bcdown::hero_dyna* excav_check_msg::mutable__oppo_dyna_end(int index) {
  return _oppo_dyna_end_.Mutable(index);
}
inline ::bcdown::hero_dyna* excav_check_msg::add__oppo_dyna_end() {
  return _oppo_dyna_end_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bcdown::hero_dyna >&
excav_check_msg::_oppo_dyna_end() const {
  return _oppo_dyna_end_;
}
inline ::google::protobuf::RepeatedPtrField< ::bcdown::hero_dyna >*
excav_check_msg::mutable__oppo_dyna_end() {
  return &_oppo_dyna_end_;
}

// repeated uint32 _oprations = 13;
inline int excav_check_msg::_oprations_size() const {
  return _oprations_.size();
}
inline void excav_check_msg::clear__oprations() {
  _oprations_.Clear();
}
inline ::google::protobuf::uint32 excav_check_msg::_oprations(int index) const {
  return _oprations_.Get(index);
}
inline void excav_check_msg::set__oprations(int index, ::google::protobuf::uint32 value) {
  _oprations_.Set(index, value);
}
inline void excav_check_msg::add__oprations(::google::protobuf::uint32 value) {
  _oprations_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
excav_check_msg::_oprations() const {
  return _oprations_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
excav_check_msg::mutable__oprations() {
  return &_oprations_;
}

// optional uint32 _cli_battle_time = 14;
inline bool excav_check_msg::has__cli_battle_time() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void excav_check_msg::set_has__cli_battle_time() {
  _has_bits_[0] |= 0x00002000u;
}
inline void excav_check_msg::clear_has__cli_battle_time() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void excav_check_msg::clear__cli_battle_time() {
  _cli_battle_time_ = 0u;
  clear_has__cli_battle_time();
}
inline ::google::protobuf::uint32 excav_check_msg::_cli_battle_time() const {
  return _cli_battle_time_;
}
inline void excav_check_msg::set__cli_battle_time(::google::protobuf::uint32 value) {
  set_has__cli_battle_time();
  _cli_battle_time_ = value;
}

// -------------------------------------------------------------------

// hero_equip

// required uint32 _index = 1;
inline bool hero_equip::has__index() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void hero_equip::set_has__index() {
  _has_bits_[0] |= 0x00000001u;
}
inline void hero_equip::clear_has__index() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void hero_equip::clear__index() {
  _index_ = 0u;
  clear_has__index();
}
inline ::google::protobuf::uint32 hero_equip::_index() const {
  return _index_;
}
inline void hero_equip::set__index(::google::protobuf::uint32 value) {
  set_has__index();
  _index_ = value;
}

// required uint32 _item_id = 2;
inline bool hero_equip::has__item_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void hero_equip::set_has__item_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void hero_equip::clear_has__item_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void hero_equip::clear__item_id() {
  _item_id_ = 0u;
  clear_has__item_id();
}
inline ::google::protobuf::uint32 hero_equip::_item_id() const {
  return _item_id_;
}
inline void hero_equip::set__item_id(::google::protobuf::uint32 value) {
  set_has__item_id();
  _item_id_ = value;
}

// required uint32 _exp = 3;
inline bool hero_equip::has__exp() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void hero_equip::set_has__exp() {
  _has_bits_[0] |= 0x00000004u;
}
inline void hero_equip::clear_has__exp() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void hero_equip::clear__exp() {
  _exp_ = 0u;
  clear_has__exp();
}
inline ::google::protobuf::uint32 hero_equip::_exp() const {
  return _exp_;
}
inline void hero_equip::set__exp(::google::protobuf::uint32 value) {
  set_has__exp();
  _exp_ = value;
}

// -------------------------------------------------------------------

// hero

// required uint32 _tid = 1;
inline bool hero::has__tid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void hero::set_has__tid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void hero::clear_has__tid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void hero::clear__tid() {
  _tid_ = 0u;
  clear_has__tid();
}
inline ::google::protobuf::uint32 hero::_tid() const {
  return _tid_;
}
inline void hero::set__tid(::google::protobuf::uint32 value) {
  set_has__tid();
  _tid_ = value;
}

// optional uint32 _rank = 2;
inline bool hero::has__rank() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void hero::set_has__rank() {
  _has_bits_[0] |= 0x00000002u;
}
inline void hero::clear_has__rank() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void hero::clear__rank() {
  _rank_ = 0u;
  clear_has__rank();
}
inline ::google::protobuf::uint32 hero::_rank() const {
  return _rank_;
}
inline void hero::set__rank(::google::protobuf::uint32 value) {
  set_has__rank();
  _rank_ = value;
}

// required uint32 _level = 3;
inline bool hero::has__level() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void hero::set_has__level() {
  _has_bits_[0] |= 0x00000004u;
}
inline void hero::clear_has__level() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void hero::clear__level() {
  _level_ = 0u;
  clear_has__level();
}
inline ::google::protobuf::uint32 hero::_level() const {
  return _level_;
}
inline void hero::set__level(::google::protobuf::uint32 value) {
  set_has__level();
  _level_ = value;
}

// required uint32 _stars = 4;
inline bool hero::has__stars() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void hero::set_has__stars() {
  _has_bits_[0] |= 0x00000008u;
}
inline void hero::clear_has__stars() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void hero::clear__stars() {
  _stars_ = 0u;
  clear_has__stars();
}
inline ::google::protobuf::uint32 hero::_stars() const {
  return _stars_;
}
inline void hero::set__stars(::google::protobuf::uint32 value) {
  set_has__stars();
  _stars_ = value;
}

// required uint32 _exp = 5;
inline bool hero::has__exp() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void hero::set_has__exp() {
  _has_bits_[0] |= 0x00000010u;
}
inline void hero::clear_has__exp() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void hero::clear__exp() {
  _exp_ = 0u;
  clear_has__exp();
}
inline ::google::protobuf::uint32 hero::_exp() const {
  return _exp_;
}
inline void hero::set__exp(::google::protobuf::uint32 value) {
  set_has__exp();
  _exp_ = value;
}

// required uint32 _gs = 6;
inline bool hero::has__gs() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void hero::set_has__gs() {
  _has_bits_[0] |= 0x00000020u;
}
inline void hero::clear_has__gs() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void hero::clear__gs() {
  _gs_ = 0u;
  clear_has__gs();
}
inline ::google::protobuf::uint32 hero::_gs() const {
  return _gs_;
}
inline void hero::set__gs(::google::protobuf::uint32 value) {
  set_has__gs();
  _gs_ = value;
}

// required .bcdown.hero.status _state = 7;
inline bool hero::has__state() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void hero::set_has__state() {
  _has_bits_[0] |= 0x00000040u;
}
inline void hero::clear_has__state() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void hero::clear__state() {
  _state_ = 0;
  clear_has__state();
}
inline ::bcdown::hero_status hero::_state() const {
  return static_cast< ::bcdown::hero_status >(_state_);
}
inline void hero::set__state(::bcdown::hero_status value) {
  assert(::bcdown::hero_status_IsValid(value));
  set_has__state();
  _state_ = value;
}

// repeated uint32 _skill_levels = 8;
inline int hero::_skill_levels_size() const {
  return _skill_levels_.size();
}
inline void hero::clear__skill_levels() {
  _skill_levels_.Clear();
}
inline ::google::protobuf::uint32 hero::_skill_levels(int index) const {
  return _skill_levels_.Get(index);
}
inline void hero::set__skill_levels(int index, ::google::protobuf::uint32 value) {
  _skill_levels_.Set(index, value);
}
inline void hero::add__skill_levels(::google::protobuf::uint32 value) {
  _skill_levels_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
hero::_skill_levels() const {
  return _skill_levels_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
hero::mutable__skill_levels() {
  return &_skill_levels_;
}

// repeated .bcdown.hero_equip _items = 9;
inline int hero::_items_size() const {
  return _items_.size();
}
inline void hero::clear__items() {
  _items_.Clear();
}
inline const ::bcdown::hero_equip& hero::_items(int index) const {
  return _items_.Get(index);
}
inline ::bcdown::hero_equip* hero::mutable__items(int index) {
  return _items_.Mutable(index);
}
inline ::bcdown::hero_equip* hero::add__items() {
  return _items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::bcdown::hero_equip >&
hero::_items() const {
  return _items_;
}
inline ::google::protobuf::RepeatedPtrField< ::bcdown::hero_equip >*
hero::mutable__items() {
  return &_items_;
}

// -------------------------------------------------------------------

// hero_dyna

// required uint32 _hp_perc = 1;
inline bool hero_dyna::has__hp_perc() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void hero_dyna::set_has__hp_perc() {
  _has_bits_[0] |= 0x00000001u;
}
inline void hero_dyna::clear_has__hp_perc() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void hero_dyna::clear__hp_perc() {
  _hp_perc_ = 0u;
  clear_has__hp_perc();
}
inline ::google::protobuf::uint32 hero_dyna::_hp_perc() const {
  return _hp_perc_;
}
inline void hero_dyna::set__hp_perc(::google::protobuf::uint32 value) {
  set_has__hp_perc();
  _hp_perc_ = value;
}

// required uint32 _mp_perc = 2;
inline bool hero_dyna::has__mp_perc() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void hero_dyna::set_has__mp_perc() {
  _has_bits_[0] |= 0x00000002u;
}
inline void hero_dyna::clear_has__mp_perc() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void hero_dyna::clear__mp_perc() {
  _mp_perc_ = 0u;
  clear_has__mp_perc();
}
inline ::google::protobuf::uint32 hero_dyna::_mp_perc() const {
  return _mp_perc_;
}
inline void hero_dyna::set__mp_perc(::google::protobuf::uint32 value) {
  set_has__mp_perc();
  _mp_perc_ = value;
}

// optional uint32 _custom_data = 3;
inline bool hero_dyna::has__custom_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void hero_dyna::set_has__custom_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void hero_dyna::clear_has__custom_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void hero_dyna::clear__custom_data() {
  _custom_data_ = 0u;
  clear_has__custom_data();
}
inline ::google::protobuf::uint32 hero_dyna::_custom_data() const {
  return _custom_data_;
}
inline void hero_dyna::set__custom_data(::google::protobuf::uint32 value) {
  set_has__custom_data();
  _custom_data_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace bcdown

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::bcdown::excav_check_msg_oppo_type>() {
  return ::bcdown::excav_check_msg_oppo_type_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::bcdown::hero_status>() {
  return ::bcdown::hero_status_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::bcdown::result>() {
  return ::bcdown::result_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_bcdown_2eproto__INCLUDED
